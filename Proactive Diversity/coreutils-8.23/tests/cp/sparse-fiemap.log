++ initial_cwd_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
++ fail=0
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23' gt-sparse-fiemap.sh.XXXX
+++ case $# in
+++ destdir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+++ template_=gt-sparse-fiemap.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ case $template_ in
++++ unset TMPDIR
+++ d='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
+++ case $d in
+++ test -d '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
++++ ls -dgo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
++++ tr S -
+++ perms='drwx------ 2 4096 Mar  6 12:00 /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
+++ case $perms in
+++ test 0 = 0
+++ echo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
+++ return
++ test_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
++ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $abs_path_dir_ in
+ PATH='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src:/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/src:/home/jfloyd/.opam/system/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games'
+ create_exe_shims_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ test yes = yes
+ local i
+ for i in '$*'
+ env cp --version
cp (GNU coreutils) 8.23
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_perl_
+ : perl
+ perl -e 'use warnings'
+ touch fiemap_chk
+ fiemap_capable_ fiemap_chk
+ python
+ python '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/fiemap-capable' fiemap_chk
+ df -t ext3 .
df: no file systems processed
+ :
++ seq 1 2 21
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 1 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 2048 (1 block of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       0:   56681010..  56681010:      1:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 2048 (1 block of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       0:   56681011..  56681011:      1:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 1 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 4096 (1 block of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       0:   56681160..  56681160:      1:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 4096 (1 block of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       0:   56681161..  56681161:      1:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 1 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 63488 (16 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      15:   56682499..  56682514:     16:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 63488 (16 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      15:   56682515..  56682530:     16:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 1 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 204800 (50 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      49:   19693568..  19693617:     50:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 204800 (50 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      49:   19693632..  19693681:     50:             eof
j2: 1 extent found
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 3 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 6144 (2 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       1:   56682533..  56682534:      2:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 6144 (2 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       1:   56682535..  56682536:      2:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 3 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 12288 (3 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       2:   56682539..  56682541:      3:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 12288 (3 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..       2:   56682542..  56682544:      3:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 3 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 190464 (47 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      46:   19693696..  19693742:     47:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 190464 (47 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..      46:   19693760..  19693806:     47:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 3 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 614400 (150 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..     149:   19693824..  19693973:    150:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 614400 (150 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        0..     149:   19694080..  19694229:    150:             eof
j2: 1 extent found
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 5 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 10240 (3 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       2:   56681168..  56681169:      2:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 10240 (3 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       2:   56681170..  56681171:      2:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 5 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 20480 (5 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   56681174..  56681177:      4:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 20480 (5 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   56681178..  56681181:      4:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 5 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 317440 (78 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   19694337..  19694340:      4:            
   1:        6..       9:   19694342..  19694345:      4:   19694341:
   2:       11..      14:   19694347..  19694350:      4:   19694346:
   3:       16..      19:   19694352..  19694355:      4:   19694351:
   4:       21..      24:   19694357..  19694360:      4:   19694356:
   5:       26..      29:   19694362..  19694365:      4:   19694361:
   6:       31..      34:   19694367..  19694370:      4:   19694366:
   7:       36..      39:   19694372..  19694375:      4:   19694371:
   8:       41..      44:   19694377..  19694380:      4:   19694376:
   9:       46..      49:   19694382..  19694385:      4:   19694381:
  10:       51..      54:   19694387..  19694390:      4:   19694386:
  11:       56..      59:   19694392..  19694395:      4:   19694391:
  12:       61..      64:   19694397..  19694400:      4:   19694396:
  13:       66..      69:   19694402..  19694405:      4:   19694401:
  14:       71..      74:   19694407..  19694410:      4:   19694406:
  15:       76..      77:   19694412..  19694413:      2:   19694411: eof
j1: 16 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 317440 (78 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   19694465..  19694468:      4:            
   1:        6..       9:   19694470..  19694473:      4:   19694469:
   2:       11..      14:   19694475..  19694478:      4:   19694474:
   3:       16..      19:   19694480..  19694483:      4:   19694479:
   4:       21..      24:   19694485..  19694488:      4:   19694484:
   5:       26..      29:   19694490..  19694493:      4:   19694489:
   6:       31..      34:   19694495..  19694498:      4:   19694494:
   7:       36..      39:   19694500..  19694503:      4:   19694499:
   8:       41..      44:   19694505..  19694508:      4:   19694504:
   9:       46..      49:   19694510..  19694513:      4:   19694509:
  10:       51..      54:   19694515..  19694518:      4:   19694514:
  11:       56..      59:   19694520..  19694523:      4:   19694519:
  12:       61..      64:   19694525..  19694528:      4:   19694524:
  13:       66..      69:   19694530..  19694533:      4:   19694529:
  14:       71..      74:   19694535..  19694538:      4:   19694534:
  15:       76..      77:   19694540..  19694541:      2:   19694539: eof
j2: 16 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 5 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1024000 (250 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   19694593..  19694596:      4:            
   1:        6..       9:   19694598..  19694601:      4:   19694597:
   2:       11..      14:   19694603..  19694606:      4:   19694602:
   3:       16..      19:   19694608..  19694611:      4:   19694607:
   4:       21..      24:   19694613..  19694616:      4:   19694612:
   5:       26..      29:   19694618..  19694621:      4:   19694617:
   6:       31..      34:   19694623..  19694626:      4:   19694622:
   7:       36..      39:   19694628..  19694631:      4:   19694627:
   8:       41..      44:   19694633..  19694636:      4:   19694632:
   9:       46..      49:   19694638..  19694641:      4:   19694637:
  10:       51..      54:   19694643..  19694646:      4:   19694642:
  11:       56..      59:   19694648..  19694651:      4:   19694647:
  12:       61..      64:   19694653..  19694656:      4:   19694652:
  13:       66..      69:   19694658..  19694661:      4:   19694657:
  14:       71..      74:   19694663..  19694666:      4:   19694662:
  15:       76..      79:   19694668..  19694671:      4:   19694667:
  16:       81..      84:   19694673..  19694676:      4:   19694672:
  17:       86..      89:   19694678..  19694681:      4:   19694677:
  18:       91..      94:   19694683..  19694686:      4:   19694682:
  19:       96..      99:   19694688..  19694691:      4:   19694687:
  20:      101..     104:   19694693..  19694696:      4:   19694692:
  21:      106..     109:   19694698..  19694701:      4:   19694697:
  22:      111..     114:   19694703..  19694706:      4:   19694702:
  23:      116..     119:   19694708..  19694711:      4:   19694707:
  24:      121..     124:   19694713..  19694716:      4:   19694712:
  25:      126..     129:   19694718..  19694721:      4:   19694717:
  26:      131..     134:   19694723..  19694726:      4:   19694722:
  27:      136..     139:   19694728..  19694731:      4:   19694727:
  28:      141..     144:   19694733..  19694736:      4:   19694732:
  29:      146..     149:   19694738..  19694741:      4:   19694737:
  30:      151..     154:   19694743..  19694746:      4:   19694742:
  31:      156..     159:   19694748..  19694751:      4:   19694747:
  32:      161..     164:   19694753..  19694756:      4:   19694752:
  33:      166..     169:   19694758..  19694761:      4:   19694757:
  34:      171..     174:   19694763..  19694766:      4:   19694762:
  35:      176..     179:   19694768..  19694771:      4:   19694767:
  36:      181..     184:   19694773..  19694776:      4:   19694772:
  37:      186..     189:   19694778..  19694781:      4:   19694777:
  38:      191..     194:   19694783..  19694786:      4:   19694782:
  39:      196..     199:   19694788..  19694791:      4:   19694787:
  40:      201..     204:   19694793..  19694796:      4:   19694792:
  41:      206..     209:   19694798..  19694801:      4:   19694797:
  42:      211..     214:   19694803..  19694806:      4:   19694802:
  43:      216..     219:   19694808..  19694811:      4:   19694807:
  44:      221..     224:   19694813..  19694816:      4:   19694812:
  45:      226..     229:   19694818..  19694821:      4:   19694817:
  46:      231..     234:   19694823..  19694826:      4:   19694822:
  47:      236..     239:   19694828..  19694831:      4:   19694827:
  48:      241..     244:   19694833..  19694836:      4:   19694832:
  49:      246..     249:   19694838..  19694841:      4:   19694837: eof
j1: 50 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1024000 (250 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       4:   19694849..  19694852:      4:            
   1:        6..       9:   19694854..  19694857:      4:   19694853:
   2:       11..      14:   19694859..  19694862:      4:   19694858:
   3:       16..      19:   19694864..  19694867:      4:   19694863:
   4:       21..      24:   19694869..  19694872:      4:   19694868:
   5:       26..      29:   19694874..  19694877:      4:   19694873:
   6:       31..      34:   19694879..  19694882:      4:   19694878:
   7:       36..      39:   19694884..  19694887:      4:   19694883:
   8:       41..      44:   19694889..  19694892:      4:   19694888:
   9:       46..      49:   19694894..  19694897:      4:   19694893:
  10:       51..      54:   19694899..  19694902:      4:   19694898:
  11:       56..      59:   19694904..  19694907:      4:   19694903:
  12:       61..      64:   19694909..  19694912:      4:   19694908:
  13:       66..      69:   19694914..  19694917:      4:   19694913:
  14:       71..      74:   19694919..  19694922:      4:   19694918:
  15:       76..      79:   19694924..  19694927:      4:   19694923:
  16:       81..      84:   19694929..  19694932:      4:   19694928:
  17:       86..      89:   19694934..  19694937:      4:   19694933:
  18:       91..      94:   19694939..  19694942:      4:   19694938:
  19:       96..      99:   19694944..  19694947:      4:   19694943:
  20:      101..     104:   19694949..  19694952:      4:   19694948:
  21:      106..     109:   19694954..  19694957:      4:   19694953:
  22:      111..     114:   19694959..  19694962:      4:   19694958:
  23:      116..     119:   19694964..  19694967:      4:   19694963:
  24:      121..     124:   19694969..  19694972:      4:   19694968:
  25:      126..     129:   19694974..  19694977:      4:   19694973:
  26:      131..     134:   19694979..  19694982:      4:   19694978:
  27:      136..     139:   19694984..  19694987:      4:   19694983:
  28:      141..     144:   19694989..  19694992:      4:   19694988:
  29:      146..     149:   19694994..  19694997:      4:   19694993:
  30:      151..     154:   19694999..  19695002:      4:   19694998:
  31:      156..     159:   19695004..  19695007:      4:   19695003:
  32:      161..     164:   19695009..  19695012:      4:   19695008:
  33:      166..     169:   19695014..  19695017:      4:   19695013:
  34:      171..     174:   19695019..  19695022:      4:   19695018:
  35:      176..     179:   19695024..  19695027:      4:   19695023:
  36:      181..     184:   19695029..  19695032:      4:   19695028:
  37:      186..     189:   19695034..  19695037:      4:   19695033:
  38:      191..     194:   19695039..  19695042:      4:   19695038:
  39:      196..     199:   19695044..  19695047:      4:   19695043:
  40:      201..     204:   19695049..  19695052:      4:   19695048:
  41:      206..     209:   19695054..  19695057:      4:   19695053:
  42:      211..     214:   19695059..  19695062:      4:   19695058:
  43:      216..     219:   19695064..  19695067:      4:   19695063:
  44:      221..     224:   19695069..  19695072:      4:   19695068:
  45:      226..     229:   19695074..  19695077:      4:   19695073:
  46:      231..     234:   19695079..  19695082:      4:   19695078:
  47:      236..     239:   19695084..  19695087:      4:   19695083:
  48:      241..     244:   19695089..  19695092:      4:   19695088:
  49:      246..     249:   19695094..  19695097:      4:   19695093: eof
j2: 50 extents found
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 7 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 14336 (4 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   56681183..  56681185:      3:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 14336 (4 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   56681186..  56681188:      3:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 7 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 28672 (7 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   56681189..  56681191:      3:            
   1:        5..       6:   56681192..  56681193:      2:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 28672 (7 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   56681194..  56681196:      3:            
   1:        5..       6:   56681197..  56681198:      2:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 7 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 444416 (109 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   19695105..  19695107:      3:            
   1:        5..       6:   19695109..  19695110:      2:   19695108:
   2:        8..      10:   19695112..  19695114:      3:   19695111:
   3:       12..      13:   19695116..  19695117:      2:   19695115:
   4:       15..      17:   19695119..  19695121:      3:   19695118:
   5:       19..      20:   19695123..  19695124:      2:   19695122:
   6:       22..      24:   19695126..  19695128:      3:   19695125:
   7:       26..      27:   19695130..  19695131:      2:   19695129:
   8:       29..      31:   19695133..  19695135:      3:   19695132:
   9:       33..      34:   19695137..  19695138:      2:   19695136:
  10:       36..      38:   19695140..  19695142:      3:   19695139:
  11:       40..      41:   19695144..  19695145:      2:   19695143:
  12:       43..      45:   19695147..  19695149:      3:   19695146:
  13:       47..      48:   19695151..  19695152:      2:   19695150:
  14:       50..      52:   19695154..  19695156:      3:   19695153:
  15:       54..      55:   19695158..  19695159:      2:   19695157:
  16:       57..      59:   19695161..  19695163:      3:   19695160:
  17:       61..      62:   19695165..  19695166:      2:   19695164:
  18:       64..      66:   19695168..  19695170:      3:   19695167:
  19:       68..      69:   19695172..  19695173:      2:   19695171:
  20:       71..      73:   19695175..  19695177:      3:   19695174:
  21:       75..      76:   19695179..  19695180:      2:   19695178:
  22:       78..      80:   19695182..  19695184:      3:   19695181:
  23:       82..      83:   19695186..  19695187:      2:   19695185:
  24:       85..      87:   19695189..  19695191:      3:   19695188:
  25:       89..      90:   19695193..  19695194:      2:   19695192:
  26:       92..      94:   19695196..  19695198:      3:   19695195:
  27:       96..      97:   19695200..  19695201:      2:   19695199:
  28:       99..     101:   19695203..  19695205:      3:   19695202:
  29:      103..     104:   19695207..  19695208:      2:   19695206:
  30:      106..     108:   19695210..  19695212:      3:   19695209: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 444416 (109 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   19695233..  19695235:      3:            
   1:        5..       6:   19695237..  19695238:      2:   19695236:
   2:        8..      10:   19695240..  19695242:      3:   19695239:
   3:       12..      13:   19695244..  19695245:      2:   19695243:
   4:       15..      17:   19695247..  19695249:      3:   19695246:
   5:       19..      20:   19695251..  19695252:      2:   19695250:
   6:       22..      24:   19695254..  19695256:      3:   19695253:
   7:       26..      27:   19695258..  19695259:      2:   19695257:
   8:       29..      31:   19695261..  19695263:      3:   19695260:
   9:       33..      34:   19695265..  19695266:      2:   19695264:
  10:       36..      38:   19695268..  19695270:      3:   19695267:
  11:       40..      41:   19695272..  19695273:      2:   19695271:
  12:       43..      45:   19695275..  19695277:      3:   19695274:
  13:       47..      48:   19695279..  19695280:      2:   19695278:
  14:       50..      52:   19695282..  19695284:      3:   19695281:
  15:       54..      55:   19695286..  19695287:      2:   19695285:
  16:       57..      59:   19695289..  19695291:      3:   19695288:
  17:       61..      62:   19695293..  19695294:      2:   19695292:
  18:       64..      66:   19695296..  19695298:      3:   19695295:
  19:       68..      69:   19695300..  19695301:      2:   19695299:
  20:       71..      73:   19695303..  19695305:      3:   19695302:
  21:       75..      76:   19695307..  19695308:      2:   19695306:
  22:       78..      80:   19695310..  19695312:      3:   19695309:
  23:       82..      83:   19695314..  19695315:      2:   19695313:
  24:       85..      87:   19695317..  19695319:      3:   19695316:
  25:       89..      90:   19695321..  19695322:      2:   19695320:
  26:       92..      94:   19695324..  19695326:      3:   19695323:
  27:       96..      97:   19695328..  19695329:      2:   19695327:
  28:       99..     101:   19695331..  19695333:      3:   19695330:
  29:      103..     104:   19695335..  19695336:      2:   19695334:
  30:      106..     108:   19695338..  19695340:      3:   19695337: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 7 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1433600 (350 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   19695617..  19695619:      3:            
   1:        5..       6:   19695621..  19695622:      2:   19695620:
   2:        8..      10:   19695624..  19695626:      3:   19695623:
   3:       12..      13:   19695628..  19695629:      2:   19695627:
   4:       15..      17:   19695631..  19695633:      3:   19695630:
   5:       19..      20:   19695635..  19695636:      2:   19695634:
   6:       22..      24:   19695638..  19695640:      3:   19695637:
   7:       26..      27:   19695642..  19695643:      2:   19695641:
   8:       29..      31:   19695645..  19695647:      3:   19695644:
   9:       33..      34:   19695649..  19695650:      2:   19695648:
  10:       36..      38:   19695652..  19695654:      3:   19695651:
  11:       40..      41:   19695656..  19695657:      2:   19695655:
  12:       43..      45:   19695659..  19695661:      3:   19695658:
  13:       47..      48:   19695663..  19695664:      2:   19695662:
  14:       50..      52:   19695666..  19695668:      3:   19695665:
  15:       54..      55:   19695670..  19695671:      2:   19695669:
  16:       57..      59:   19695673..  19695675:      3:   19695672:
  17:       61..      62:   19695677..  19695678:      2:   19695676:
  18:       64..      66:   19695680..  19695682:      3:   19695679:
  19:       68..      69:   19695684..  19695685:      2:   19695683:
  20:       71..      73:   19695687..  19695689:      3:   19695686:
  21:       75..      76:   19695691..  19695692:      2:   19695690:
  22:       78..      80:   19695694..  19695696:      3:   19695693:
  23:       82..      83:   19695698..  19695699:      2:   19695697:
  24:       85..      87:   19695701..  19695703:      3:   19695700:
  25:       89..      90:   19695705..  19695706:      2:   19695704:
  26:       92..      94:   19695708..  19695710:      3:   19695707:
  27:       96..      97:   19695712..  19695713:      2:   19695711:
  28:       99..     101:   19695715..  19695717:      3:   19695714:
  29:      103..     104:   19695719..  19695720:      2:   19695718:
  30:      106..     108:   19695722..  19695724:      3:   19695721:
  31:      110..     111:   19695726..  19695727:      2:   19695725:
  32:      113..     115:   19695729..  19695731:      3:   19695728:
  33:      117..     118:   19695733..  19695734:      2:   19695732:
  34:      120..     122:   19695736..  19695738:      3:   19695735:
  35:      124..     125:   19695740..  19695741:      2:   19695739:
  36:      127..     129:   19695743..  19695745:      3:   19695742:
  37:      131..     132:   19695747..  19695748:      2:   19695746:
  38:      134..     136:   19695750..  19695752:      3:   19695749:
  39:      138..     139:   19695754..  19695755:      2:   19695753:
  40:      141..     143:   19695757..  19695759:      3:   19695756:
  41:      145..     146:   19695761..  19695762:      2:   19695760:
  42:      148..     150:   19695764..  19695766:      3:   19695763:
  43:      152..     153:   19695768..  19695769:      2:   19695767:
  44:      155..     157:   19695771..  19695773:      3:   19695770:
  45:      159..     160:   19695775..  19695776:      2:   19695774:
  46:      162..     164:   19695778..  19695780:      3:   19695777:
  47:      166..     167:   19695782..  19695783:      2:   19695781:
  48:      169..     171:   19695785..  19695787:      3:   19695784:
  49:      173..     174:   19695789..  19695790:      2:   19695788:
  50:      176..     178:   19695792..  19695794:      3:   19695791:
  51:      180..     181:   19695796..  19695797:      2:   19695795:
  52:      183..     185:   19695799..  19695801:      3:   19695798:
  53:      187..     188:   19695803..  19695804:      2:   19695802:
  54:      190..     192:   19695806..  19695808:      3:   19695805:
  55:      194..     195:   19695810..  19695811:      2:   19695809:
  56:      197..     199:   19695813..  19695815:      3:   19695812:
  57:      201..     202:   19695817..  19695818:      2:   19695816:
  58:      204..     206:   19695820..  19695822:      3:   19695819:
  59:      208..     209:   19695824..  19695825:      2:   19695823:
  60:      211..     213:   19695827..  19695829:      3:   19695826:
  61:      215..     216:   19695831..  19695832:      2:   19695830:
  62:      218..     220:   19695834..  19695836:      3:   19695833:
  63:      222..     223:   19695838..  19695839:      2:   19695837:
  64:      225..     227:   19695841..  19695843:      3:   19695840:
  65:      229..     230:   19695845..  19695846:      2:   19695844:
  66:      232..     234:   19695848..  19695850:      3:   19695847:
  67:      236..     237:   19695852..  19695853:      2:   19695851:
  68:      239..     241:   19695855..  19695857:      3:   19695854:
  69:      243..     244:   19695859..  19695860:      2:   19695858:
  70:      246..     248:   19695862..  19695864:      3:   19695861:
  71:      250..     251:   19695866..  19695867:      2:   19695865:
  72:      253..     255:   19695869..  19695871:      3:   19695868:
  73:      257..     258:   19695873..  19695874:      2:   19695872:
  74:      260..     262:   19695876..  19695878:      3:   19695875:
  75:      264..     265:   19695880..  19695881:      2:   19695879:
  76:      267..     269:   19695883..  19695885:      3:   19695882:
  77:      271..     272:   19695887..  19695888:      2:   19695886:
  78:      274..     276:   19695890..  19695892:      3:   19695889:
  79:      278..     279:   19695894..  19695895:      2:   19695893:
  80:      281..     283:   19695897..  19695899:      3:   19695896:
  81:      285..     286:   19695901..  19695902:      2:   19695900:
  82:      288..     290:   19695904..  19695906:      3:   19695903:
  83:      292..     293:   19695908..  19695909:      2:   19695907:
  84:      295..     297:   19695911..  19695913:      3:   19695910:
  85:      299..     300:   19695915..  19695916:      2:   19695914:
  86:      302..     304:   19695918..  19695920:      3:   19695917:
  87:      306..     307:   19695922..  19695923:      2:   19695921:
  88:      309..     311:   19695925..  19695927:      3:   19695924:
  89:      313..     314:   19695929..  19695930:      2:   19695928:
  90:      316..     318:   19695932..  19695934:      3:   19695931:
  91:      320..     321:   19695936..  19695937:      2:   19695935:
  92:      323..     325:   19695939..  19695941:      3:   19695938:
  93:      327..     328:   19695943..  19695944:      2:   19695942:
  94:      330..     332:   19695946..  19695948:      3:   19695945:
  95:      334..     335:   19695950..  19695951:      2:   19695949:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1433600 (350 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        1..       3:   19694593..  19694595:      3:            
   1:        5..       6:   19694597..  19694598:      2:   19694596:
   2:        8..      10:   19694600..  19694602:      3:   19694599:
   3:       12..      13:   19694604..  19694605:      2:   19694603:
   4:       15..      17:   19694607..  19694609:      3:   19694606:
   5:       19..      20:   19694611..  19694612:      2:   19694610:
   6:       22..      24:   19694614..  19694616:      3:   19694613:
   7:       26..      27:   19694618..  19694619:      2:   19694617:
   8:       29..      31:   19694621..  19694623:      3:   19694620:
   9:       33..      34:   19694625..  19694626:      2:   19694624:
  10:       36..      38:   19694628..  19694630:      3:   19694627:
  11:       40..      41:   19694632..  19694633:      2:   19694631:
  12:       43..      45:   19694635..  19694637:      3:   19694634:
  13:       47..      48:   19694639..  19694640:      2:   19694638:
  14:       50..      52:   19694642..  19694644:      3:   19694641:
  15:       54..      55:   19694646..  19694647:      2:   19694645:
  16:       57..      59:   19694649..  19694651:      3:   19694648:
  17:       61..      62:   19694653..  19694654:      2:   19694652:
  18:       64..      66:   19694656..  19694658:      3:   19694655:
  19:       68..      69:   19694660..  19694661:      2:   19694659:
  20:       71..      73:   19694663..  19694665:      3:   19694662:
  21:       75..      76:   19694667..  19694668:      2:   19694666:
  22:       78..      80:   19694670..  19694672:      3:   19694669:
  23:       82..      83:   19694674..  19694675:      2:   19694673:
  24:       85..      87:   19694677..  19694679:      3:   19694676:
  25:       89..      90:   19694681..  19694682:      2:   19694680:
  26:       92..      94:   19694684..  19694686:      3:   19694683:
  27:       96..      97:   19694688..  19694689:      2:   19694687:
  28:       99..     101:   19694691..  19694693:      3:   19694690:
  29:      103..     104:   19694695..  19694696:      2:   19694694:
  30:      106..     108:   19694698..  19694700:      3:   19694697:
  31:      110..     111:   19694702..  19694703:      2:   19694701:
  32:      113..     115:   19694705..  19694707:      3:   19694704:
  33:      117..     118:   19694709..  19694710:      2:   19694708:
  34:      120..     122:   19694712..  19694714:      3:   19694711:
  35:      124..     125:   19694716..  19694717:      2:   19694715:
  36:      127..     129:   19694719..  19694721:      3:   19694718:
  37:      131..     132:   19694723..  19694724:      2:   19694722:
  38:      134..     136:   19694726..  19694728:      3:   19694725:
  39:      138..     139:   19694730..  19694731:      2:   19694729:
  40:      141..     143:   19694733..  19694735:      3:   19694732:
  41:      145..     146:   19694737..  19694738:      2:   19694736:
  42:      148..     150:   19694740..  19694742:      3:   19694739:
  43:      152..     153:   19694744..  19694745:      2:   19694743:
  44:      155..     157:   19694747..  19694749:      3:   19694746:
  45:      159..     160:   19694751..  19694752:      2:   19694750:
  46:      162..     164:   19694754..  19694756:      3:   19694753:
  47:      166..     167:   19694758..  19694759:      2:   19694757:
  48:      169..     171:   19694761..  19694763:      3:   19694760:
  49:      173..     174:   19694765..  19694766:      2:   19694764:
  50:      176..     178:   19694768..  19694770:      3:   19694767:
  51:      180..     181:   19694772..  19694773:      2:   19694771:
  52:      183..     185:   19694775..  19694777:      3:   19694774:
  53:      187..     188:   19694779..  19694780:      2:   19694778:
  54:      190..     192:   19694782..  19694784:      3:   19694781:
  55:      194..     195:   19694786..  19694787:      2:   19694785:
  56:      197..     199:   19694789..  19694791:      3:   19694788:
  57:      201..     202:   19694793..  19694794:      2:   19694792:
  58:      204..     206:   19694796..  19694798:      3:   19694795:
  59:      208..     209:   19694800..  19694801:      2:   19694799:
  60:      211..     213:   19694803..  19694805:      3:   19694802:
  61:      215..     216:   19694807..  19694808:      2:   19694806:
  62:      218..     220:   19694810..  19694812:      3:   19694809:
  63:      222..     223:   19694814..  19694815:      2:   19694813:
  64:      225..     227:   19694817..  19694819:      3:   19694816:
  65:      229..     230:   19694821..  19694822:      2:   19694820:
  66:      232..     234:   19694824..  19694826:      3:   19694823:
  67:      236..     237:   19694828..  19694829:      2:   19694827:
  68:      239..     241:   19694831..  19694833:      3:   19694830:
  69:      243..     244:   19694835..  19694836:      2:   19694834:
  70:      246..     248:   19694838..  19694840:      3:   19694837:
  71:      250..     251:   19694842..  19694843:      2:   19694841:
  72:      253..     255:   19694845..  19694847:      3:   19694844:
  73:      257..     258:   19694849..  19694850:      2:   19694848:
  74:      260..     262:   19694852..  19694854:      3:   19694851:
  75:      264..     265:   19694856..  19694857:      2:   19694855:
  76:      267..     269:   19694859..  19694861:      3:   19694858:
  77:      271..     272:   19694863..  19694864:      2:   19694862:
  78:      274..     276:   19694866..  19694868:      3:   19694865:
  79:      278..     279:   19694870..  19694871:      2:   19694869:
  80:      281..     283:   19694873..  19694875:      3:   19694872:
  81:      285..     286:   19694877..  19694878:      2:   19694876:
  82:      288..     290:   19694880..  19694882:      3:   19694879:
  83:      292..     293:   19694884..  19694885:      2:   19694883:
  84:      295..     297:   19694887..  19694889:      3:   19694886:
  85:      299..     300:   19694891..  19694892:      2:   19694890:
  86:      302..     304:   19694894..  19694896:      3:   19694893:
  87:      306..     307:   19694898..  19694899:      2:   19694897:
  88:      309..     311:   19694901..  19694903:      3:   19694900:
  89:      313..     314:   19694905..  19694906:      2:   19694904:
  90:      316..     318:   19694908..  19694910:      3:   19694907:
  91:      320..     321:   19694912..  19694913:      2:   19694911:
  92:      323..     325:   19694915..  19694917:      3:   19694914:
  93:      327..     328:   19694919..  19694920:      2:   19694918:
  94:      330..     332:   19694922..  19694924:      3:   19694921:
  95:      334..     335:   19694926..  19694927:      2:   19694925:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 9 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ sed 's/ [a-z,][a-z,]*$//' ff1
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 18432 (5 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   56682551..  56682553:      3:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 18432 (5 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   56682554..  56682556:      3:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 9 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 36864 (9 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   56681206..  56681208:      3:            
   1:        6..       8:   56681209..  56681211:      3:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 36864 (9 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   56681212..  56681214:      3:            
   1:        6..       8:   56681215..  56681217:      3:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 9 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 571392 (140 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   19695362..  19695364:      3:            
   1:        6..       8:   19695366..  19695368:      3:   19695365:
   2:       11..      13:   19695371..  19695373:      3:   19695369:
   3:       15..      17:   19695375..  19695377:      3:   19695374:
   4:       20..      22:   19695380..  19695382:      3:   19695378:
   5:       24..      26:   19695384..  19695386:      3:   19695383:
   6:       29..      31:   19695389..  19695391:      3:   19695387:
   7:       33..      35:   19695393..  19695395:      3:   19695392:
   8:       38..      40:   19695398..  19695400:      3:   19695396:
   9:       42..      44:   19695402..  19695404:      3:   19695401:
  10:       47..      49:   19695407..  19695409:      3:   19695405:
  11:       51..      53:   19695411..  19695413:      3:   19695410:
  12:       56..      58:   19695416..  19695418:      3:   19695414:
  13:       60..      62:   19695420..  19695422:      3:   19695419:
  14:       65..      67:   19695425..  19695427:      3:   19695423:
  15:       69..      71:   19695429..  19695431:      3:   19695428:
  16:       74..      76:   19695434..  19695436:      3:   19695432:
  17:       78..      80:   19695438..  19695440:      3:   19695437:
  18:       83..      85:   19695443..  19695445:      3:   19695441:
  19:       87..      89:   19695447..  19695449:      3:   19695446:
  20:       92..      94:   19695452..  19695454:      3:   19695450:
  21:       96..      98:   19695456..  19695458:      3:   19695455:
  22:      101..     103:   19695461..  19695463:      3:   19695459:
  23:      105..     107:   19695465..  19695467:      3:   19695464:
  24:      110..     112:   19695470..  19695472:      3:   19695468:
  25:      114..     116:   19695474..  19695476:      3:   19695473:
  26:      119..     121:   19695479..  19695481:      3:   19695477:
  27:      123..     125:   19695483..  19695485:      3:   19695482:
  28:      128..     130:   19695488..  19695490:      3:   19695486:
  29:      132..     134:   19695492..  19695494:      3:   19695491:
  30:      137..     139:   19695497..  19695499:      3:   19695495: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 571392 (140 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   19696130..  19696132:      3:            
   1:        6..       8:   19696134..  19696136:      3:   19696133:
   2:       11..      13:   19696139..  19696141:      3:   19696137:
   3:       15..      17:   19696143..  19696145:      3:   19696142:
   4:       20..      22:   19696148..  19696150:      3:   19696146:
   5:       24..      26:   19696152..  19696154:      3:   19696151:
   6:       29..      31:   19696157..  19696159:      3:   19696155:
   7:       33..      35:   19696161..  19696163:      3:   19696160:
   8:       38..      40:   19696166..  19696168:      3:   19696164:
   9:       42..      44:   19696170..  19696172:      3:   19696169:
  10:       47..      49:   19696175..  19696177:      3:   19696173:
  11:       51..      53:   19696179..  19696181:      3:   19696178:
  12:       56..      58:   19696184..  19696186:      3:   19696182:
  13:       60..      62:   19696188..  19696190:      3:   19696187:
  14:       65..      67:   19696193..  19696195:      3:   19696191:
  15:       69..      71:   19696197..  19696199:      3:   19696196:
  16:       74..      76:   19696202..  19696204:      3:   19696200:
  17:       78..      80:   19696206..  19696208:      3:   19696205:
  18:       83..      85:   19696211..  19696213:      3:   19696209:
  19:       87..      89:   19696215..  19696217:      3:   19696214:
  20:       92..      94:   19696220..  19696222:      3:   19696218:
  21:       96..      98:   19696224..  19696226:      3:   19696223:
  22:      101..     103:   19696229..  19696231:      3:   19696227:
  23:      105..     107:   19696233..  19696235:      3:   19696232:
  24:      110..     112:   19696238..  19696240:      3:   19696236:
  25:      114..     116:   19696242..  19696244:      3:   19696241:
  26:      119..     121:   19696247..  19696249:      3:   19696245:
  27:      123..     125:   19696251..  19696253:      3:   19696250:
  28:      128..     130:   19696256..  19696258:      3:   19696254:
  29:      132..     134:   19696260..  19696262:      3:   19696259:
  30:      137..     139:   19696265..  19696267:      3:   19696263: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 9 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1843200 (450 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   19693570..  19693572:      3:            
   1:        6..       8:   19693574..  19693576:      3:   19693573:
   2:       11..      13:   19693579..  19693581:      3:   19693577:
   3:       15..      17:   19693583..  19693585:      3:   19693582:
   4:       20..      22:   19693588..  19693590:      3:   19693586:
   5:       24..      26:   19693592..  19693594:      3:   19693591:
   6:       29..      31:   19693597..  19693599:      3:   19693595:
   7:       33..      35:   19693601..  19693603:      3:   19693600:
   8:       38..      40:   19693606..  19693608:      3:   19693604:
   9:       42..      44:   19693610..  19693612:      3:   19693609:
  10:       47..      49:   19693615..  19693617:      3:   19693613:
  11:       51..      53:   19693619..  19693621:      3:   19693618:
  12:       56..      58:   19693624..  19693626:      3:   19693622:
  13:       60..      62:   19693628..  19693630:      3:   19693627:
  14:       65..      67:   19693633..  19693635:      3:   19693631:
  15:       69..      71:   19693637..  19693639:      3:   19693636:
  16:       74..      76:   19693642..  19693644:      3:   19693640:
  17:       78..      80:   19693646..  19693648:      3:   19693645:
  18:       83..      85:   19693651..  19693653:      3:   19693649:
  19:       87..      89:   19693655..  19693657:      3:   19693654:
  20:       92..      94:   19693660..  19693662:      3:   19693658:
  21:       96..      98:   19693664..  19693666:      3:   19693663:
  22:      101..     103:   19693669..  19693671:      3:   19693667:
  23:      105..     107:   19693673..  19693675:      3:   19693672:
  24:      110..     112:   19693678..  19693680:      3:   19693676:
  25:      114..     116:   19693682..  19693684:      3:   19693681:
  26:      119..     121:   19693687..  19693689:      3:   19693685:
  27:      123..     125:   19693691..  19693693:      3:   19693690:
  28:      128..     130:   19693696..  19693698:      3:   19693694:
  29:      132..     134:   19693700..  19693702:      3:   19693699:
  30:      137..     139:   19693705..  19693707:      3:   19693703:
  31:      141..     143:   19693709..  19693711:      3:   19693708:
  32:      146..     148:   19693714..  19693716:      3:   19693712:
  33:      150..     152:   19693718..  19693720:      3:   19693717:
  34:      155..     157:   19693723..  19693725:      3:   19693721:
  35:      159..     161:   19693727..  19693729:      3:   19693726:
  36:      164..     166:   19693732..  19693734:      3:   19693730:
  37:      168..     170:   19693736..  19693738:      3:   19693735:
  38:      173..     175:   19693741..  19693743:      3:   19693739:
  39:      177..     179:   19693745..  19693747:      3:   19693744:
  40:      182..     184:   19693750..  19693752:      3:   19693748:
  41:      186..     188:   19693754..  19693756:      3:   19693753:
  42:      191..     193:   19693759..  19693761:      3:   19693757:
  43:      195..     197:   19693763..  19693765:      3:   19693762:
  44:      200..     202:   19693768..  19693770:      3:   19693766:
  45:      204..     206:   19693772..  19693774:      3:   19693771:
  46:      209..     211:   19693777..  19693779:      3:   19693775:
  47:      213..     215:   19693781..  19693783:      3:   19693780:
  48:      218..     220:   19693786..  19693788:      3:   19693784:
  49:      222..     224:   19693790..  19693792:      3:   19693789:
  50:      227..     229:   19693795..  19693797:      3:   19693793:
  51:      231..     233:   19693799..  19693801:      3:   19693798:
  52:      236..     238:   19693804..  19693806:      3:   19693802:
  53:      240..     242:   19693808..  19693810:      3:   19693807:
  54:      245..     247:   19693813..  19693815:      3:   19693811:
  55:      249..     251:   19693817..  19693819:      3:   19693816:
  56:      254..     256:   19693822..  19693824:      3:   19693820:
  57:      258..     260:   19693826..  19693828:      3:   19693825:
  58:      263..     265:   19693831..  19693833:      3:   19693829:
  59:      267..     269:   19693835..  19693837:      3:   19693834:
  60:      272..     274:   19693840..  19693842:      3:   19693838:
  61:      276..     278:   19693844..  19693846:      3:   19693843:
  62:      281..     283:   19693849..  19693851:      3:   19693847:
  63:      285..     287:   19693853..  19693855:      3:   19693852:
  64:      290..     292:   19693858..  19693860:      3:   19693856:
  65:      294..     296:   19693862..  19693864:      3:   19693861:
  66:      299..     301:   19693867..  19693869:      3:   19693865:
  67:      303..     305:   19693871..  19693873:      3:   19693870:
  68:      308..     310:   19693876..  19693878:      3:   19693874:
  69:      312..     314:   19693880..  19693882:      3:   19693879:
  70:      317..     319:   19693885..  19693887:      3:   19693883:
  71:      321..     323:   19693889..  19693891:      3:   19693888:
  72:      326..     328:   19693894..  19693896:      3:   19693892:
  73:      330..     332:   19693898..  19693900:      3:   19693897:
  74:      335..     337:   19693903..  19693905:      3:   19693901:
  75:      339..     341:   19693907..  19693909:      3:   19693906:
  76:      344..     346:   19693912..  19693914:      3:   19693910:
  77:      348..     350:   19693916..  19693918:      3:   19693915:
  78:      353..     355:   19693921..  19693923:      3:   19693919:
  79:      357..     359:   19693925..  19693927:      3:   19693924:
  80:      362..     364:   19693930..  19693932:      3:   19693928:
  81:      366..     368:   19693934..  19693936:      3:   19693933:
  82:      371..     373:   19693939..  19693941:      3:   19693937:
  83:      375..     377:   19693943..  19693945:      3:   19693942:
  84:      380..     382:   19693948..  19693950:      3:   19693946:
  85:      384..     386:   19693952..  19693954:      3:   19693951:
  86:      389..     391:   19693957..  19693959:      3:   19693955:
  87:      393..     395:   19693961..  19693963:      3:   19693960:
  88:      398..     400:   19693966..  19693968:      3:   19693964:
  89:      402..     404:   19693970..  19693972:      3:   19693969:
  90:      407..     409:   19693975..  19693977:      3:   19693973:
  91:      411..     413:   19693979..  19693981:      3:   19693978:
  92:      416..     418:   19693984..  19693986:      3:   19693982:
  93:      420..     422:   19693988..  19693990:      3:   19693987:
  94:      425..     427:   19693993..  19693995:      3:   19693991:
  95:      429..     431:   19693997..  19693999:      3:   19693996:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1843200 (450 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       4:   19694082..  19694084:      3:            
   1:        6..       8:   19694086..  19694088:      3:   19694085:
   2:       11..      13:   19694091..  19694093:      3:   19694089:
   3:       15..      17:   19694095..  19694097:      3:   19694094:
   4:       20..      22:   19694100..  19694102:      3:   19694098:
   5:       24..      26:   19694104..  19694106:      3:   19694103:
   6:       29..      31:   19694109..  19694111:      3:   19694107:
   7:       33..      35:   19694113..  19694115:      3:   19694112:
   8:       38..      40:   19694118..  19694120:      3:   19694116:
   9:       42..      44:   19694122..  19694124:      3:   19694121:
  10:       47..      49:   19694127..  19694129:      3:   19694125:
  11:       51..      53:   19694131..  19694133:      3:   19694130:
  12:       56..      58:   19694136..  19694138:      3:   19694134:
  13:       60..      62:   19694140..  19694142:      3:   19694139:
  14:       65..      67:   19694145..  19694147:      3:   19694143:
  15:       69..      71:   19694149..  19694151:      3:   19694148:
  16:       74..      76:   19694154..  19694156:      3:   19694152:
  17:       78..      80:   19694158..  19694160:      3:   19694157:
  18:       83..      85:   19694163..  19694165:      3:   19694161:
  19:       87..      89:   19694167..  19694169:      3:   19694166:
  20:       92..      94:   19694172..  19694174:      3:   19694170:
  21:       96..      98:   19694176..  19694178:      3:   19694175:
  22:      101..     103:   19694181..  19694183:      3:   19694179:
  23:      105..     107:   19694185..  19694187:      3:   19694184:
  24:      110..     112:   19694190..  19694192:      3:   19694188:
  25:      114..     116:   19694194..  19694196:      3:   19694193:
  26:      119..     121:   19694199..  19694201:      3:   19694197:
  27:      123..     125:   19694203..  19694205:      3:   19694202:
  28:      128..     130:   19694208..  19694210:      3:   19694206:
  29:      132..     134:   19694212..  19694214:      3:   19694211:
  30:      137..     139:   19694217..  19694219:      3:   19694215:
  31:      141..     143:   19694221..  19694223:      3:   19694220:
  32:      146..     148:   19694226..  19694228:      3:   19694224:
  33:      150..     152:   19694230..  19694232:      3:   19694229:
  34:      155..     157:   19694235..  19694237:      3:   19694233:
  35:      159..     161:   19694239..  19694241:      3:   19694238:
  36:      164..     166:   19694244..  19694246:      3:   19694242:
  37:      168..     170:   19694248..  19694250:      3:   19694247:
  38:      173..     175:   19694253..  19694255:      3:   19694251:
  39:      177..     179:   19694257..  19694259:      3:   19694256:
  40:      182..     184:   19694262..  19694264:      3:   19694260:
  41:      186..     188:   19694266..  19694268:      3:   19694265:
  42:      191..     193:   19694271..  19694273:      3:   19694269:
  43:      195..     197:   19694275..  19694277:      3:   19694274:
  44:      200..     202:   19694280..  19694282:      3:   19694278:
  45:      204..     206:   19694284..  19694286:      3:   19694283:
  46:      209..     211:   19694289..  19694291:      3:   19694287:
  47:      213..     215:   19694293..  19694295:      3:   19694292:
  48:      218..     220:   19694298..  19694300:      3:   19694296:
  49:      222..     224:   19694302..  19694304:      3:   19694301:
  50:      227..     229:   19694307..  19694309:      3:   19694305:
  51:      231..     233:   19694311..  19694313:      3:   19694310:
  52:      236..     238:   19694316..  19694318:      3:   19694314:
  53:      240..     242:   19694320..  19694322:      3:   19694319:
  54:      245..     247:   19694325..  19694327:      3:   19694323:
  55:      249..     251:   19694329..  19694331:      3:   19694328:
  56:      254..     256:   19694334..  19694336:      3:   19694332:
  57:      258..     260:   19694338..  19694340:      3:   19694337:
  58:      263..     265:   19694343..  19694345:      3:   19694341:
  59:      267..     269:   19694347..  19694349:      3:   19694346:
  60:      272..     274:   19694352..  19694354:      3:   19694350:
  61:      276..     278:   19694356..  19694358:      3:   19694355:
  62:      281..     283:   19694361..  19694363:      3:   19694359:
  63:      285..     287:   19694365..  19694367:      3:   19694364:
  64:      290..     292:   19694370..  19694372:      3:   19694368:
  65:      294..     296:   19694374..  19694376:      3:   19694373:
  66:      299..     301:   19694379..  19694381:      3:   19694377:
  67:      303..     305:   19694383..  19694385:      3:   19694382:
  68:      308..     310:   19694388..  19694390:      3:   19694386:
  69:      312..     314:   19694392..  19694394:      3:   19694391:
  70:      317..     319:   19694397..  19694399:      3:   19694395:
  71:      321..     323:   19694401..  19694403:      3:   19694400:
  72:      326..     328:   19694406..  19694408:      3:   19694404:
  73:      330..     332:   19694410..  19694412:      3:   19694409:
  74:      335..     337:   19694415..  19694417:      3:   19694413:
  75:      339..     341:   19694419..  19694421:      3:   19694418:
  76:      344..     346:   19694424..  19694426:      3:   19694422:
  77:      348..     350:   19694428..  19694430:      3:   19694427:
  78:      353..     355:   19694433..  19694435:      3:   19694431:
  79:      357..     359:   19694437..  19694439:      3:   19694436:
  80:      362..     364:   19694442..  19694444:      3:   19694440:
  81:      366..     368:   19694446..  19694448:      3:   19694445:
  82:      371..     373:   19694451..  19694453:      3:   19694449:
  83:      375..     377:   19694455..  19694457:      3:   19694454:
  84:      380..     382:   19694460..  19694462:      3:   19694458:
  85:      384..     386:   19694464..  19694466:      3:   19694463:
  86:      389..     391:   19694469..  19694471:      3:   19694467:
  87:      393..     395:   19694473..  19694475:      3:   19694472:
  88:      398..     400:   19694478..  19694480:      3:   19694476:
  89:      402..     404:   19694482..  19694484:      3:   19694481:
  90:      407..     409:   19694487..  19694489:      3:   19694485:
  91:      411..     413:   19694491..  19694493:      3:   19694490:
  92:      416..     418:   19694496..  19694498:      3:   19694494:
  93:      420..     422:   19694500..  19694502:      3:   19694499:
  94:      425..     427:   19694505..  19694507:      3:   19694503:
  95:      429..     431:   19694509..  19694511:      3:   19694508:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 11 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 22528 (6 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   56681220..  56681223:      4:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 22528 (6 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   56681224..  56681227:      4:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 11 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 45056 (11 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   56681229..  56681232:      4:            
   1:        8..      10:   56681233..  56681235:      3:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 45056 (11 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   56682562..  56682565:      4:            
   1:        8..      10:   56682566..  56682568:      3:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 11 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 698368 (171 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   19696386..  19696389:      4:            
   1:        8..      10:   19696392..  19696394:      3:   19696390:
   2:       13..      16:   19696397..  19696400:      4:   19696395:
   3:       19..      21:   19696403..  19696405:      3:   19696401:
   4:       24..      27:   19696408..  19696411:      4:   19696406:
   5:       30..      32:   19696414..  19696416:      3:   19696412:
   6:       35..      38:   19696419..  19696422:      4:   19696417:
   7:       41..      43:   19696425..  19696427:      3:   19696423:
   8:       46..      49:   19696430..  19696433:      4:   19696428:
   9:       52..      54:   19696436..  19696438:      3:   19696434:
  10:       57..      60:   19696441..  19696444:      4:   19696439:
  11:       63..      65:   19696447..  19696449:      3:   19696445:
  12:       68..      71:   19696452..  19696455:      4:   19696450:
  13:       74..      76:   19696458..  19696460:      3:   19696456:
  14:       79..      82:   19696463..  19696466:      4:   19696461:
  15:       85..      87:   19696469..  19696471:      3:   19696467:
  16:       90..      93:   19696474..  19696477:      4:   19696472:
  17:       96..      98:   19696480..  19696482:      3:   19696478:
  18:      101..     104:   19696485..  19696488:      4:   19696483:
  19:      107..     109:   19696491..  19696493:      3:   19696489:
  20:      112..     115:   19696496..  19696499:      4:   19696494:
  21:      118..     120:   19696502..  19696504:      3:   19696500:
  22:      123..     126:   19696507..  19696510:      4:   19696505:
  23:      129..     131:   19696513..  19696515:      3:   19696511:
  24:      134..     137:   19696518..  19696521:      4:   19696516:
  25:      140..     142:   19696524..  19696526:      3:   19696522:
  26:      145..     148:   19696529..  19696532:      4:   19696527:
  27:      151..     153:   19696535..  19696537:      3:   19696533:
  28:      156..     159:   19696540..  19696543:      4:   19696538:
  29:      162..     164:   19696546..  19696548:      3:   19696544:
  30:      167..     170:   19696551..  19696554:      4:   19696549: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 698368 (171 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   19696642..  19696645:      4:            
   1:        8..      10:   19696648..  19696650:      3:   19696646:
   2:       13..      16:   19696653..  19696656:      4:   19696651:
   3:       19..      21:   19696659..  19696661:      3:   19696657:
   4:       24..      27:   19696664..  19696667:      4:   19696662:
   5:       30..      32:   19696670..  19696672:      3:   19696668:
   6:       35..      38:   19696675..  19696678:      4:   19696673:
   7:       41..      43:   19696681..  19696683:      3:   19696679:
   8:       46..      49:   19696686..  19696689:      4:   19696684:
   9:       52..      54:   19696692..  19696694:      3:   19696690:
  10:       57..      60:   19696697..  19696700:      4:   19696695:
  11:       63..      65:   19696703..  19696705:      3:   19696701:
  12:       68..      71:   19696708..  19696711:      4:   19696706:
  13:       74..      76:   19696714..  19696716:      3:   19696712:
  14:       79..      82:   19696719..  19696722:      4:   19696717:
  15:       85..      87:   19696725..  19696727:      3:   19696723:
  16:       90..      93:   19696730..  19696733:      4:   19696728:
  17:       96..      98:   19696736..  19696738:      3:   19696734:
  18:      101..     104:   19696741..  19696744:      4:   19696739:
  19:      107..     109:   19696747..  19696749:      3:   19696745:
  20:      112..     115:   19696752..  19696755:      4:   19696750:
  21:      118..     120:   19696758..  19696760:      3:   19696756:
  22:      123..     126:   19696763..  19696766:      4:   19696761:
  23:      129..     131:   19696769..  19696771:      3:   19696767:
  24:      134..     137:   19696774..  19696777:      4:   19696772:
  25:      140..     142:   19696780..  19696782:      3:   19696778:
  26:      145..     148:   19696785..  19696788:      4:   19696783:
  27:      151..     153:   19696791..  19696793:      3:   19696789:
  28:      156..     159:   19696796..  19696799:      4:   19696794:
  29:      162..     164:   19696802..  19696804:      3:   19696800:
  30:      167..     170:   19696807..  19696810:      4:   19696805: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 11 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 2252800 (550 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   19697154..  19697157:      4:            
   1:        8..      10:   19697160..  19697162:      3:   19697158:
   2:       13..      16:   19697165..  19697168:      4:   19697163:
   3:       19..      21:   19697171..  19697173:      3:   19697169:
   4:       24..      27:   19697176..  19697179:      4:   19697174:
   5:       30..      32:   19697182..  19697184:      3:   19697180:
   6:       35..      38:   19697187..  19697190:      4:   19697185:
   7:       41..      43:   19697193..  19697195:      3:   19697191:
   8:       46..      49:   19697198..  19697201:      4:   19697196:
   9:       52..      54:   19697204..  19697206:      3:   19697202:
  10:       57..      60:   19697209..  19697212:      4:   19697207:
  11:       63..      65:   19697215..  19697217:      3:   19697213:
  12:       68..      71:   19697220..  19697223:      4:   19697218:
  13:       74..      76:   19697226..  19697228:      3:   19697224:
  14:       79..      82:   19697231..  19697234:      4:   19697229:
  15:       85..      87:   19697237..  19697239:      3:   19697235:
  16:       90..      93:   19697242..  19697245:      4:   19697240:
  17:       96..      98:   19697248..  19697250:      3:   19697246:
  18:      101..     104:   19697253..  19697256:      4:   19697251:
  19:      107..     109:   19697259..  19697261:      3:   19697257:
  20:      112..     115:   19697264..  19697267:      4:   19697262:
  21:      118..     120:   19697270..  19697272:      3:   19697268:
  22:      123..     126:   19697275..  19697278:      4:   19697273:
  23:      129..     131:   19697281..  19697283:      3:   19697279:
  24:      134..     137:   19697286..  19697289:      4:   19697284:
  25:      140..     142:   19697292..  19697294:      3:   19697290:
  26:      145..     148:   19697297..  19697300:      4:   19697295:
  27:      151..     153:   19697303..  19697305:      3:   19697301:
  28:      156..     159:   19697308..  19697311:      4:   19697306:
  29:      162..     164:   19697314..  19697316:      3:   19697312:
  30:      167..     170:   19697319..  19697322:      4:   19697317:
  31:      173..     175:   19697325..  19697327:      3:   19697323:
  32:      178..     181:   19697330..  19697333:      4:   19697328:
  33:      184..     186:   19697336..  19697338:      3:   19697334:
  34:      189..     192:   19697341..  19697344:      4:   19697339:
  35:      195..     197:   19697347..  19697349:      3:   19697345:
  36:      200..     203:   19697352..  19697355:      4:   19697350:
  37:      206..     208:   19697358..  19697360:      3:   19697356:
  38:      211..     214:   19697363..  19697366:      4:   19697361:
  39:      217..     219:   19697369..  19697371:      3:   19697367:
  40:      222..     225:   19697374..  19697377:      4:   19697372:
  41:      228..     230:   19697380..  19697382:      3:   19697378:
  42:      233..     236:   19697385..  19697388:      4:   19697383:
  43:      239..     241:   19697391..  19697393:      3:   19697389:
  44:      244..     247:   19697396..  19697399:      4:   19697394:
  45:      250..     252:   19697402..  19697404:      3:   19697400:
  46:      255..     258:   19697407..  19697410:      4:   19697405:
  47:      261..     263:   19697413..  19697415:      3:   19697411:
  48:      266..     269:   19697418..  19697421:      4:   19697416:
  49:      272..     274:   19697424..  19697426:      3:   19697422:
  50:      277..     280:   19697429..  19697432:      4:   19697427:
  51:      283..     285:   19697435..  19697437:      3:   19697433:
  52:      288..     291:   19697440..  19697443:      4:   19697438:
  53:      294..     296:   19697446..  19697448:      3:   19697444:
  54:      299..     302:   19697451..  19697454:      4:   19697449:
  55:      305..     307:   19697457..  19697459:      3:   19697455:
  56:      310..     313:   19697462..  19697465:      4:   19697460:
  57:      316..     318:   19697468..  19697470:      3:   19697466:
  58:      321..     324:   19697473..  19697476:      4:   19697471:
  59:      327..     329:   19697479..  19697481:      3:   19697477:
  60:      332..     335:   19697484..  19697487:      4:   19697482:
  61:      338..     340:   19697490..  19697492:      3:   19697488:
  62:      343..     346:   19697495..  19697498:      4:   19697493:
  63:      349..     351:   19697501..  19697503:      3:   19697499:
  64:      354..     357:   19697506..  19697509:      4:   19697504:
  65:      360..     362:   19697512..  19697514:      3:   19697510:
  66:      365..     368:   19697517..  19697520:      4:   19697515:
  67:      371..     373:   19697523..  19697525:      3:   19697521:
  68:      376..     379:   19697528..  19697531:      4:   19697526:
  69:      382..     384:   19697534..  19697536:      3:   19697532:
  70:      387..     390:   19697539..  19697542:      4:   19697537:
  71:      393..     395:   19697545..  19697547:      3:   19697543:
  72:      398..     401:   19697550..  19697553:      4:   19697548:
  73:      404..     406:   19697556..  19697558:      3:   19697554:
  74:      409..     412:   19697561..  19697564:      4:   19697559:
  75:      415..     417:   19697567..  19697569:      3:   19697565:
  76:      420..     423:   19697572..  19697575:      4:   19697570:
  77:      426..     428:   19697578..  19697580:      3:   19697576:
  78:      431..     434:   19697583..  19697586:      4:   19697581:
  79:      437..     439:   19697589..  19697591:      3:   19697587:
  80:      442..     445:   19697594..  19697597:      4:   19697592:
  81:      448..     450:   19697600..  19697602:      3:   19697598:
  82:      453..     456:   19697605..  19697608:      4:   19697603:
  83:      459..     461:   19697611..  19697613:      3:   19697609:
  84:      464..     467:   19697616..  19697619:      4:   19697614:
  85:      470..     472:   19697622..  19697624:      3:   19697620:
  86:      475..     478:   19697627..  19697630:      4:   19697625:
  87:      481..     483:   19697633..  19697635:      3:   19697631:
  88:      486..     489:   19697638..  19697641:      4:   19697636:
  89:      492..     494:   19697644..  19697646:      3:   19697642:
  90:      497..     500:   19697649..  19697652:      4:   19697647:
  91:      503..     505:   19697655..  19697657:      3:   19697653:
  92:      508..     511:   19697660..  19697663:      4:   19697658:
  93:      514..     516:   19697668..  19697670:      3:   19697664:
  94:      519..     522:   19697673..  19697676:      4:   19697671:
  95:      525..     527:   19697679..  19697681:      3:   19697677:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 2252800 (550 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        2..       5:   19698178..  19698181:      4:            
   1:        8..      10:   19698184..  19698186:      3:   19698182:
   2:       13..      16:   19698189..  19698192:      4:   19698187:
   3:       19..      21:   19698195..  19698197:      3:   19698193:
   4:       24..      27:   19698200..  19698203:      4:   19698198:
   5:       30..      32:   19698206..  19698208:      3:   19698204:
   6:       35..      38:   19698211..  19698214:      4:   19698209:
   7:       41..      43:   19698217..  19698219:      3:   19698215:
   8:       46..      49:   19698222..  19698225:      4:   19698220:
   9:       52..      54:   19698228..  19698230:      3:   19698226:
  10:       57..      60:   19698233..  19698236:      4:   19698231:
  11:       63..      65:   19698239..  19698241:      3:   19698237:
  12:       68..      71:   19698244..  19698247:      4:   19698242:
  13:       74..      76:   19698250..  19698252:      3:   19698248:
  14:       79..      82:   19698255..  19698258:      4:   19698253:
  15:       85..      87:   19698261..  19698263:      3:   19698259:
  16:       90..      93:   19698266..  19698269:      4:   19698264:
  17:       96..      98:   19698272..  19698274:      3:   19698270:
  18:      101..     104:   19698277..  19698280:      4:   19698275:
  19:      107..     109:   19698283..  19698285:      3:   19698281:
  20:      112..     115:   19698288..  19698291:      4:   19698286:
  21:      118..     120:   19698294..  19698296:      3:   19698292:
  22:      123..     126:   19698299..  19698302:      4:   19698297:
  23:      129..     131:   19698305..  19698307:      3:   19698303:
  24:      134..     137:   19698310..  19698313:      4:   19698308:
  25:      140..     142:   19698316..  19698318:      3:   19698314:
  26:      145..     148:   19698321..  19698324:      4:   19698319:
  27:      151..     153:   19698327..  19698329:      3:   19698325:
  28:      156..     159:   19698332..  19698335:      4:   19698330:
  29:      162..     164:   19698338..  19698340:      3:   19698336:
  30:      167..     170:   19698343..  19698346:      4:   19698341:
  31:      173..     175:   19698349..  19698351:      3:   19698347:
  32:      178..     181:   19698354..  19698357:      4:   19698352:
  33:      184..     186:   19698360..  19698362:      3:   19698358:
  34:      189..     192:   19698365..  19698368:      4:   19698363:
  35:      195..     197:   19698371..  19698373:      3:   19698369:
  36:      200..     203:   19698376..  19698379:      4:   19698374:
  37:      206..     208:   19698382..  19698384:      3:   19698380:
  38:      211..     214:   19698387..  19698390:      4:   19698385:
  39:      217..     219:   19698393..  19698395:      3:   19698391:
  40:      222..     225:   19698398..  19698401:      4:   19698396:
  41:      228..     230:   19698404..  19698406:      3:   19698402:
  42:      233..     236:   19698409..  19698412:      4:   19698407:
  43:      239..     241:   19698415..  19698417:      3:   19698413:
  44:      244..     247:   19698420..  19698423:      4:   19698418:
  45:      250..     252:   19698426..  19698428:      3:   19698424:
  46:      255..     258:   19698431..  19698434:      4:   19698429:
  47:      261..     263:   19698437..  19698439:      3:   19698435:
  48:      266..     269:   19698442..  19698445:      4:   19698440:
  49:      272..     274:   19698448..  19698450:      3:   19698446:
  50:      277..     280:   19698453..  19698456:      4:   19698451:
  51:      283..     285:   19698459..  19698461:      3:   19698457:
  52:      288..     291:   19698464..  19698467:      4:   19698462:
  53:      294..     296:   19698470..  19698472:      3:   19698468:
  54:      299..     302:   19698475..  19698478:      4:   19698473:
  55:      305..     307:   19698481..  19698483:      3:   19698479:
  56:      310..     313:   19698486..  19698489:      4:   19698484:
  57:      316..     318:   19698492..  19698494:      3:   19698490:
  58:      321..     324:   19698497..  19698500:      4:   19698495:
  59:      327..     329:   19698503..  19698505:      3:   19698501:
  60:      332..     335:   19698508..  19698511:      4:   19698506:
  61:      338..     340:   19698514..  19698516:      3:   19698512:
  62:      343..     346:   19698519..  19698522:      4:   19698517:
  63:      349..     351:   19698525..  19698527:      3:   19698523:
  64:      354..     357:   19698530..  19698533:      4:   19698528:
  65:      360..     362:   19698536..  19698538:      3:   19698534:
  66:      365..     368:   19698541..  19698544:      4:   19698539:
  67:      371..     373:   19698547..  19698549:      3:   19698545:
  68:      376..     379:   19698552..  19698555:      4:   19698550:
  69:      382..     384:   19698558..  19698560:      3:   19698556:
  70:      387..     390:   19698563..  19698566:      4:   19698561:
  71:      393..     395:   19698569..  19698571:      3:   19698567:
  72:      398..     401:   19698574..  19698577:      4:   19698572:
  73:      404..     406:   19698580..  19698582:      3:   19698578:
  74:      409..     412:   19698585..  19698588:      4:   19698583:
  75:      415..     417:   19698591..  19698593:      3:   19698589:
  76:      420..     423:   19698596..  19698599:      4:   19698594:
  77:      426..     428:   19698602..  19698604:      3:   19698600:
  78:      431..     434:   19698607..  19698610:      4:   19698605:
  79:      437..     439:   19698613..  19698615:      3:   19698611:
  80:      442..     445:   19698618..  19698621:      4:   19698616:
  81:      448..     450:   19698624..  19698626:      3:   19698622:
  82:      453..     456:   19698629..  19698632:      4:   19698627:
  83:      459..     461:   19698635..  19698637:      3:   19698633:
  84:      464..     467:   19698640..  19698643:      4:   19698638:
  85:      470..     472:   19698646..  19698648:      3:   19698644:
  86:      475..     478:   19698651..  19698654:      4:   19698649:
  87:      481..     483:   19698657..  19698659:      3:   19698655:
  88:      486..     489:   19698662..  19698665:      4:   19698660:
  89:      492..     494:   19698668..  19698670:      3:   19698666:
  90:      497..     500:   19698673..  19698676:      4:   19698671:
  91:      503..     505:   19698679..  19698681:      3:   19698677:
  92:      508..     511:   19698684..  19698687:      4:   19698682:
  93:      514..     516:   19698692..  19698694:      3:   19698688:
  94:      519..     522:   19698697..  19698700:      4:   19698695:
  95:      525..     527:   19698703..  19698705:      3:   19698701:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 13 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 26624 (7 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   56681237..  56681240:      4:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 26624 (7 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   56681241..  56681244:      4:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 13 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 53248 (13 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   56682573..  56682576:      4:            
   1:        9..      12:   56682577..  56682580:      4:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 53248 (13 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   56682581..  56682584:      4:            
   1:        9..      12:   56682585..  56682588:      4:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 13 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 825344 (202 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   19696899..  19696902:      4:            
   1:        9..      12:   19696905..  19696908:      4:   19696903:
   2:       16..      19:   19696912..  19696915:      4:   19696909:
   3:       22..      25:   19696918..  19696921:      4:   19696916:
   4:       29..      32:   19696925..  19696928:      4:   19696922:
   5:       35..      38:   19696931..  19696934:      4:   19696929:
   6:       42..      45:   19696938..  19696941:      4:   19696935:
   7:       48..      51:   19696944..  19696947:      4:   19696942:
   8:       55..      58:   19696951..  19696954:      4:   19696948:
   9:       61..      64:   19696957..  19696960:      4:   19696955:
  10:       68..      71:   19696964..  19696967:      4:   19696961:
  11:       74..      77:   19696970..  19696973:      4:   19696968:
  12:       81..      84:   19696977..  19696980:      4:   19696974:
  13:       87..      90:   19696983..  19696986:      4:   19696981:
  14:       94..      97:   19696990..  19696993:      4:   19696987:
  15:      100..     103:   19696996..  19696999:      4:   19696994:
  16:      107..     110:   19697003..  19697006:      4:   19697000:
  17:      113..     116:   19697009..  19697012:      4:   19697007:
  18:      120..     123:   19697016..  19697019:      4:   19697013:
  19:      126..     129:   19697022..  19697025:      4:   19697020:
  20:      133..     136:   19697029..  19697032:      4:   19697026:
  21:      139..     142:   19697035..  19697038:      4:   19697033:
  22:      146..     149:   19697042..  19697045:      4:   19697039:
  23:      152..     155:   19697048..  19697051:      4:   19697046:
  24:      159..     162:   19697055..  19697058:      4:   19697052:
  25:      165..     168:   19697061..  19697064:      4:   19697059:
  26:      172..     175:   19697068..  19697071:      4:   19697065:
  27:      178..     181:   19697074..  19697077:      4:   19697072:
  28:      185..     188:   19697081..  19697084:      4:   19697078:
  29:      191..     194:   19697087..  19697090:      4:   19697085:
  30:      198..     201:   19697094..  19697097:      4:   19697091: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 825344 (202 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   19697923..  19697926:      4:            
   1:        9..      12:   19697929..  19697932:      4:   19697927:
   2:       16..      19:   19697936..  19697939:      4:   19697933:
   3:       22..      25:   19697942..  19697945:      4:   19697940:
   4:       29..      32:   19697949..  19697952:      4:   19697946:
   5:       35..      38:   19697955..  19697958:      4:   19697953:
   6:       42..      45:   19697962..  19697965:      4:   19697959:
   7:       48..      51:   19697968..  19697971:      4:   19697966:
   8:       55..      58:   19697975..  19697978:      4:   19697972:
   9:       61..      64:   19697981..  19697984:      4:   19697979:
  10:       68..      71:   19697988..  19697991:      4:   19697985:
  11:       74..      77:   19697994..  19697997:      4:   19697992:
  12:       81..      84:   19698001..  19698004:      4:   19697998:
  13:       87..      90:   19698007..  19698010:      4:   19698005:
  14:       94..      97:   19698014..  19698017:      4:   19698011:
  15:      100..     103:   19698020..  19698023:      4:   19698018:
  16:      107..     110:   19698027..  19698030:      4:   19698024:
  17:      113..     116:   19698033..  19698036:      4:   19698031:
  18:      120..     123:   19698040..  19698043:      4:   19698037:
  19:      126..     129:   19698046..  19698049:      4:   19698044:
  20:      133..     136:   19698053..  19698056:      4:   19698050:
  21:      139..     142:   19698059..  19698062:      4:   19698057:
  22:      146..     149:   19698066..  19698069:      4:   19698063:
  23:      152..     155:   19698072..  19698075:      4:   19698070:
  24:      159..     162:   19698079..  19698082:      4:   19698076:
  25:      165..     168:   19698085..  19698088:      4:   19698083:
  26:      172..     175:   19698092..  19698095:      4:   19698089:
  27:      178..     181:   19698098..  19698101:      4:   19698096:
  28:      185..     188:   19698105..  19698108:      4:   19698102:
  29:      191..     194:   19698111..  19698114:      4:   19698109:
  30:      198..     201:   19698118..  19698121:      4:   19698115: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 13 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 2662400 (650 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   19699203..  19699206:      4:            
   1:        9..      12:   19699209..  19699212:      4:   19699207:
   2:       16..      19:   19699216..  19699219:      4:   19699213:
   3:       22..      25:   19699222..  19699225:      4:   19699220:
   4:       29..      32:   19699229..  19699232:      4:   19699226:
   5:       35..      38:   19699235..  19699238:      4:   19699233:
   6:       42..      45:   19699242..  19699245:      4:   19699239:
   7:       48..      51:   19699248..  19699251:      4:   19699246:
   8:       55..      58:   19699255..  19699258:      4:   19699252:
   9:       61..      64:   19699261..  19699264:      4:   19699259:
  10:       68..      71:   19699268..  19699271:      4:   19699265:
  11:       74..      77:   19699274..  19699277:      4:   19699272:
  12:       81..      84:   19699281..  19699284:      4:   19699278:
  13:       87..      90:   19699287..  19699290:      4:   19699285:
  14:       94..      97:   19699294..  19699297:      4:   19699291:
  15:      100..     103:   19699300..  19699303:      4:   19699298:
  16:      107..     110:   19699307..  19699310:      4:   19699304:
  17:      113..     116:   19699313..  19699316:      4:   19699311:
  18:      120..     123:   19699320..  19699323:      4:   19699317:
  19:      126..     129:   19699326..  19699329:      4:   19699324:
  20:      133..     136:   19699333..  19699336:      4:   19699330:
  21:      139..     142:   19699339..  19699342:      4:   19699337:
  22:      146..     149:   19699346..  19699349:      4:   19699343:
  23:      152..     155:   19699352..  19699355:      4:   19699350:
  24:      159..     162:   19699359..  19699362:      4:   19699356:
  25:      165..     168:   19699365..  19699368:      4:   19699363:
  26:      172..     175:   19699372..  19699375:      4:   19699369:
  27:      178..     181:   19699378..  19699381:      4:   19699376:
  28:      185..     188:   19699385..  19699388:      4:   19699382:
  29:      191..     194:   19699391..  19699394:      4:   19699389:
  30:      198..     201:   19699398..  19699401:      4:   19699395:
  31:      204..     207:   19699404..  19699407:      4:   19699402:
  32:      211..     214:   19699411..  19699414:      4:   19699408:
  33:      217..     220:   19699417..  19699420:      4:   19699415:
  34:      224..     227:   19699424..  19699427:      4:   19699421:
  35:      230..     233:   19699430..  19699433:      4:   19699428:
  36:      237..     240:   19699437..  19699440:      4:   19699434:
  37:      243..     246:   19699443..  19699446:      4:   19699441:
  38:      250..     253:   19699450..  19699453:      4:   19699447:
  39:      256..     259:   19699456..  19699459:      4:   19699454:
  40:      263..     266:   19699463..  19699466:      4:   19699460:
  41:      269..     272:   19699469..  19699472:      4:   19699467:
  42:      276..     279:   19699476..  19699479:      4:   19699473:
  43:      282..     285:   19699482..  19699485:      4:   19699480:
  44:      289..     292:   19699489..  19699492:      4:   19699486:
  45:      295..     298:   19699495..  19699498:      4:   19699493:
  46:      302..     305:   19699502..  19699505:      4:   19699499:
  47:      308..     311:   19699508..  19699511:      4:   19699506:
  48:      315..     318:   19699515..  19699518:      4:   19699512:
  49:      321..     324:   19699521..  19699524:      4:   19699519:
  50:      328..     331:   19699528..  19699531:      4:   19699525:
  51:      334..     337:   19699534..  19699537:      4:   19699532:
  52:      341..     344:   19699541..  19699544:      4:   19699538:
  53:      347..     350:   19699547..  19699550:      4:   19699545:
  54:      354..     357:   19699554..  19699557:      4:   19699551:
  55:      360..     363:   19699560..  19699563:      4:   19699558:
  56:      367..     370:   19699567..  19699570:      4:   19699564:
  57:      373..     376:   19699573..  19699576:      4:   19699571:
  58:      380..     383:   19699580..  19699583:      4:   19699577:
  59:      386..     389:   19699586..  19699589:      4:   19699584:
  60:      393..     396:   19699593..  19699596:      4:   19699590:
  61:      399..     402:   19699599..  19699602:      4:   19699597:
  62:      406..     409:   19699606..  19699609:      4:   19699603:
  63:      412..     415:   19699612..  19699615:      4:   19699610:
  64:      419..     422:   19699619..  19699622:      4:   19699616:
  65:      425..     428:   19699625..  19699628:      4:   19699623:
  66:      432..     435:   19699632..  19699635:      4:   19699629:
  67:      438..     441:   19699638..  19699641:      4:   19699636:
  68:      445..     448:   19699645..  19699648:      4:   19699642:
  69:      451..     454:   19699651..  19699654:      4:   19699649:
  70:      458..     461:   19699658..  19699661:      4:   19699655:
  71:      464..     467:   19699664..  19699667:      4:   19699662:
  72:      471..     474:   19699671..  19699674:      4:   19699668:
  73:      477..     480:   19699677..  19699680:      4:   19699675:
  74:      484..     487:   19699684..  19699687:      4:   19699681:
  75:      490..     493:   19699690..  19699693:      4:   19699688:
  76:      497..     500:   19699697..  19699700:      4:   19699694:
  77:      503..     506:   19699703..  19699706:      4:   19699701:
  78:      510..     513:   19699710..  19699713:      4:   19699707:
  79:      516..     519:   19699716..  19699719:      4:   19699714:
  80:      523..     526:   19699723..  19699726:      4:   19699720:
  81:      529..     532:   19699729..  19699732:      4:   19699727:
  82:      536..     539:   19699736..  19699739:      4:   19699733:
  83:      542..     545:   19699742..  19699745:      4:   19699740:
  84:      549..     552:   19699749..  19699752:      4:   19699746:
  85:      555..     558:   19699755..  19699758:      4:   19699753:
  86:      562..     565:   19699762..  19699765:      4:   19699759:
  87:      568..     571:   19699768..  19699771:      4:   19699766:
  88:      575..     578:   19699775..  19699778:      4:   19699772:
  89:      581..     584:   19699781..  19699784:      4:   19699779:
  90:      588..     591:   19699788..  19699791:      4:   19699785:
  91:      594..     597:   19699794..  19699797:      4:   19699792:
  92:      601..     604:   19699801..  19699804:      4:   19699798:
  93:      607..     610:   19699807..  19699810:      4:   19699805:
  94:      614..     617:   19699814..  19699817:      4:   19699811:
  95:      620..     623:   19699820..  19699823:      4:   19699818:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 2662400 (650 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       6:   19700227..  19700230:      4:            
   1:        9..      12:   19700233..  19700236:      4:   19700231:
   2:       16..      19:   19700240..  19700243:      4:   19700237:
   3:       22..      25:   19700246..  19700249:      4:   19700244:
   4:       29..      32:   19700253..  19700256:      4:   19700250:
   5:       35..      38:   19700259..  19700262:      4:   19700257:
   6:       42..      45:   19700266..  19700269:      4:   19700263:
   7:       48..      51:   19700272..  19700275:      4:   19700270:
   8:       55..      58:   19700279..  19700282:      4:   19700276:
   9:       61..      64:   19700285..  19700288:      4:   19700283:
  10:       68..      71:   19700292..  19700295:      4:   19700289:
  11:       74..      77:   19700298..  19700301:      4:   19700296:
  12:       81..      84:   19700305..  19700308:      4:   19700302:
  13:       87..      90:   19700311..  19700314:      4:   19700309:
  14:       94..      97:   19700318..  19700321:      4:   19700315:
  15:      100..     103:   19700324..  19700327:      4:   19700322:
  16:      107..     110:   19700331..  19700334:      4:   19700328:
  17:      113..     116:   19700337..  19700340:      4:   19700335:
  18:      120..     123:   19700344..  19700347:      4:   19700341:
  19:      126..     129:   19700350..  19700353:      4:   19700348:
  20:      133..     136:   19700357..  19700360:      4:   19700354:
  21:      139..     142:   19700363..  19700366:      4:   19700361:
  22:      146..     149:   19700370..  19700373:      4:   19700367:
  23:      152..     155:   19700376..  19700379:      4:   19700374:
  24:      159..     162:   19700383..  19700386:      4:   19700380:
  25:      165..     168:   19700389..  19700392:      4:   19700387:
  26:      172..     175:   19700396..  19700399:      4:   19700393:
  27:      178..     181:   19700402..  19700405:      4:   19700400:
  28:      185..     188:   19700409..  19700412:      4:   19700406:
  29:      191..     194:   19700415..  19700418:      4:   19700413:
  30:      198..     201:   19700422..  19700425:      4:   19700419:
  31:      204..     207:   19700428..  19700431:      4:   19700426:
  32:      211..     214:   19700435..  19700438:      4:   19700432:
  33:      217..     220:   19700441..  19700444:      4:   19700439:
  34:      224..     227:   19700448..  19700451:      4:   19700445:
  35:      230..     233:   19700454..  19700457:      4:   19700452:
  36:      237..     240:   19700461..  19700464:      4:   19700458:
  37:      243..     246:   19700467..  19700470:      4:   19700465:
  38:      250..     253:   19700474..  19700477:      4:   19700471:
  39:      256..     259:   19700480..  19700483:      4:   19700478:
  40:      263..     266:   19700487..  19700490:      4:   19700484:
  41:      269..     272:   19700493..  19700496:      4:   19700491:
  42:      276..     279:   19700500..  19700503:      4:   19700497:
  43:      282..     285:   19700506..  19700509:      4:   19700504:
  44:      289..     292:   19700513..  19700516:      4:   19700510:
  45:      295..     298:   19700519..  19700522:      4:   19700517:
  46:      302..     305:   19700526..  19700529:      4:   19700523:
  47:      308..     311:   19700532..  19700535:      4:   19700530:
  48:      315..     318:   19700539..  19700542:      4:   19700536:
  49:      321..     324:   19700545..  19700548:      4:   19700543:
  50:      328..     331:   19700552..  19700555:      4:   19700549:
  51:      334..     337:   19700558..  19700561:      4:   19700556:
  52:      341..     344:   19700565..  19700568:      4:   19700562:
  53:      347..     350:   19700571..  19700574:      4:   19700569:
  54:      354..     357:   19700578..  19700581:      4:   19700575:
  55:      360..     363:   19700584..  19700587:      4:   19700582:
  56:      367..     370:   19700591..  19700594:      4:   19700588:
  57:      373..     376:   19700597..  19700600:      4:   19700595:
  58:      380..     383:   19700604..  19700607:      4:   19700601:
  59:      386..     389:   19700610..  19700613:      4:   19700608:
  60:      393..     396:   19700617..  19700620:      4:   19700614:
  61:      399..     402:   19700623..  19700626:      4:   19700621:
  62:      406..     409:   19700630..  19700633:      4:   19700627:
  63:      412..     415:   19700636..  19700639:      4:   19700634:
  64:      419..     422:   19700643..  19700646:      4:   19700640:
  65:      425..     428:   19700649..  19700652:      4:   19700647:
  66:      432..     435:   19700656..  19700659:      4:   19700653:
  67:      438..     441:   19700662..  19700665:      4:   19700660:
  68:      445..     448:   19700669..  19700672:      4:   19700666:
  69:      451..     454:   19700675..  19700678:      4:   19700673:
  70:      458..     461:   19700682..  19700685:      4:   19700679:
  71:      464..     467:   19700688..  19700691:      4:   19700686:
  72:      471..     474:   19700695..  19700698:      4:   19700692:
  73:      477..     480:   19700701..  19700704:      4:   19700699:
  74:      484..     487:   19700708..  19700711:      4:   19700705:
  75:      490..     493:   19700714..  19700717:      4:   19700712:
  76:      497..     500:   19700721..  19700724:      4:   19700718:
  77:      503..     506:   19700727..  19700730:      4:   19700725:
  78:      510..     513:   19700734..  19700737:      4:   19700731:
  79:      516..     519:   19700740..  19700743:      4:   19700738:
  80:      523..     526:   19700747..  19700750:      4:   19700744:
  81:      529..     532:   19700753..  19700756:      4:   19700751:
  82:      536..     539:   19700760..  19700763:      4:   19700757:
  83:      542..     545:   19700766..  19700769:      4:   19700764:
  84:      549..     552:   19700773..  19700776:      4:   19700770:
  85:      555..     558:   19700779..  19700782:      4:   19700777:
  86:      562..     565:   19700786..  19700789:      4:   19700783:
  87:      568..     571:   19700792..  19700795:      4:   19700790:
  88:      575..     578:   19700799..  19700802:      4:   19700796:
  89:      581..     584:   19700805..  19700808:      4:   19700803:
  90:      588..     591:   19700812..  19700815:      4:   19700809:
  91:      594..     597:   19700818..  19700821:      4:   19700816:
  92:      601..     604:   19700825..  19700828:      4:   19700822:
  93:      607..     610:   19700831..  19700834:      4:   19700829:
  94:      614..     617:   19700838..  19700841:      4:   19700835:
  95:      620..     623:   19700844..  19700847:      4:   19700842:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 15 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 30720 (8 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   56682592..  56682596:      5:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 30720 (8 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   56682597..  56682601:      5:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 15 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ sed 's/ [a-z,][a-z,]*$//' ff1
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 61440 (15 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   56682603..  56682607:      5:            
   1:       11..      14:   56682608..  56682611:      4:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 61440 (15 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   56681250..  56681254:      5:            
   1:       11..      14:   56681255..  56681258:      4:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 15 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 952320 (233 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   19698947..  19698951:      5:            
   1:       11..      14:   19698955..  19698958:      4:   19698952:
   2:       18..      22:   19698962..  19698966:      5:   19698959:
   3:       26..      29:   19698970..  19698973:      4:   19698967:
   4:       33..      37:   19698977..  19698981:      5:   19698974:
   5:       41..      44:   19698985..  19698988:      4:   19698982:
   6:       48..      52:   19698992..  19698996:      5:   19698989:
   7:       56..      59:   19699000..  19699003:      4:   19698997:
   8:       63..      67:   19699007..  19699011:      5:   19699004:
   9:       71..      74:   19699015..  19699018:      4:   19699012:
  10:       78..      82:   19699022..  19699026:      5:   19699019:
  11:       86..      89:   19699030..  19699033:      4:   19699027:
  12:       93..      97:   19699037..  19699041:      5:   19699034:
  13:      101..     104:   19699045..  19699048:      4:   19699042:
  14:      108..     112:   19699052..  19699056:      5:   19699049:
  15:      116..     119:   19699060..  19699063:      4:   19699057:
  16:      123..     127:   19699067..  19699071:      5:   19699064:
  17:      131..     134:   19699075..  19699078:      4:   19699072:
  18:      138..     142:   19699082..  19699086:      5:   19699079:
  19:      146..     149:   19699090..  19699093:      4:   19699087:
  20:      153..     157:   19699097..  19699101:      5:   19699094:
  21:      161..     164:   19699105..  19699108:      4:   19699102:
  22:      168..     172:   19699112..  19699116:      5:   19699109:
  23:      176..     179:   19699120..  19699123:      4:   19699117:
  24:      183..     187:   19699127..  19699131:      5:   19699124:
  25:      191..     194:   19699135..  19699138:      4:   19699132:
  26:      198..     202:   19699142..  19699146:      5:   19699139:
  27:      206..     209:   19699150..  19699153:      4:   19699147:
  28:      213..     217:   19699157..  19699161:      5:   19699154:
  29:      221..     224:   19699165..  19699168:      4:   19699162:
  30:      228..     232:   19699172..  19699176:      5:   19699169: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 952320 (233 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   19699971..  19699975:      5:            
   1:       11..      14:   19699979..  19699982:      4:   19699976:
   2:       18..      22:   19699986..  19699990:      5:   19699983:
   3:       26..      29:   19699994..  19699997:      4:   19699991:
   4:       33..      37:   19700001..  19700005:      5:   19699998:
   5:       41..      44:   19700009..  19700012:      4:   19700006:
   6:       48..      52:   19700016..  19700020:      5:   19700013:
   7:       56..      59:   19700024..  19700027:      4:   19700021:
   8:       63..      67:   19700031..  19700035:      5:   19700028:
   9:       71..      74:   19700039..  19700042:      4:   19700036:
  10:       78..      82:   19700046..  19700050:      5:   19700043:
  11:       86..      89:   19700054..  19700057:      4:   19700051:
  12:       93..      97:   19700061..  19700065:      5:   19700058:
  13:      101..     104:   19700069..  19700072:      4:   19700066:
  14:      108..     112:   19700076..  19700080:      5:   19700073:
  15:      116..     119:   19700084..  19700087:      4:   19700081:
  16:      123..     127:   19700091..  19700095:      5:   19700088:
  17:      131..     134:   19700099..  19700102:      4:   19700096:
  18:      138..     142:   19700106..  19700110:      5:   19700103:
  19:      146..     149:   19700114..  19700117:      4:   19700111:
  20:      153..     157:   19700121..  19700125:      5:   19700118:
  21:      161..     164:   19700129..  19700132:      4:   19700126:
  22:      168..     172:   19700136..  19700140:      5:   19700133:
  23:      176..     179:   19700144..  19700147:      4:   19700141:
  24:      183..     187:   19700151..  19700155:      5:   19700148:
  25:      191..     194:   19700159..  19700162:      4:   19700156:
  26:      198..     202:   19700166..  19700170:      5:   19700163:
  27:      206..     209:   19700174..  19700177:      4:   19700171:
  28:      213..     217:   19700181..  19700185:      5:   19700178:
  29:      221..     224:   19700189..  19700192:      4:   19700186:
  30:      228..     232:   19700196..  19700200:      5:   19700193: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 15 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 3072000 (750 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   19701251..  19701255:      5:            
   1:       11..      14:   19701259..  19701262:      4:   19701256:
   2:       18..      22:   19701266..  19701270:      5:   19701263:
   3:       26..      29:   19701274..  19701277:      4:   19701271:
   4:       33..      37:   19701281..  19701285:      5:   19701278:
   5:       41..      44:   19701289..  19701292:      4:   19701286:
   6:       48..      52:   19701296..  19701300:      5:   19701293:
   7:       56..      59:   19701304..  19701307:      4:   19701301:
   8:       63..      67:   19701311..  19701315:      5:   19701308:
   9:       71..      74:   19701319..  19701322:      4:   19701316:
  10:       78..      82:   19701326..  19701330:      5:   19701323:
  11:       86..      89:   19701334..  19701337:      4:   19701331:
  12:       93..      97:   19701341..  19701345:      5:   19701338:
  13:      101..     104:   19701349..  19701352:      4:   19701346:
  14:      108..     112:   19701356..  19701360:      5:   19701353:
  15:      116..     119:   19701364..  19701367:      4:   19701361:
  16:      123..     127:   19701371..  19701375:      5:   19701368:
  17:      131..     134:   19701379..  19701382:      4:   19701376:
  18:      138..     142:   19701386..  19701390:      5:   19701383:
  19:      146..     149:   19701394..  19701397:      4:   19701391:
  20:      153..     157:   19701401..  19701405:      5:   19701398:
  21:      161..     164:   19701409..  19701412:      4:   19701406:
  22:      168..     172:   19701416..  19701420:      5:   19701413:
  23:      176..     179:   19701424..  19701427:      4:   19701421:
  24:      183..     187:   19701431..  19701435:      5:   19701428:
  25:      191..     194:   19701439..  19701442:      4:   19701436:
  26:      198..     202:   19701446..  19701450:      5:   19701443:
  27:      206..     209:   19701454..  19701457:      4:   19701451:
  28:      213..     217:   19701461..  19701465:      5:   19701458:
  29:      221..     224:   19701469..  19701472:      4:   19701466:
  30:      228..     232:   19701476..  19701480:      5:   19701473:
  31:      236..     239:   19701484..  19701487:      4:   19701481:
  32:      243..     247:   19701491..  19701495:      5:   19701488:
  33:      251..     254:   19701499..  19701502:      4:   19701496:
  34:      258..     262:   19701506..  19701510:      5:   19701503:
  35:      266..     269:   19701514..  19701517:      4:   19701511:
  36:      273..     277:   19701521..  19701525:      5:   19701518:
  37:      281..     284:   19701529..  19701532:      4:   19701526:
  38:      288..     292:   19701536..  19701540:      5:   19701533:
  39:      296..     299:   19701544..  19701547:      4:   19701541:
  40:      303..     307:   19701551..  19701555:      5:   19701548:
  41:      311..     314:   19701559..  19701562:      4:   19701556:
  42:      318..     322:   19701566..  19701570:      5:   19701563:
  43:      326..     329:   19701574..  19701577:      4:   19701571:
  44:      333..     337:   19701581..  19701585:      5:   19701578:
  45:      341..     344:   19701589..  19701592:      4:   19701586:
  46:      348..     352:   19701596..  19701600:      5:   19701593:
  47:      356..     359:   19701604..  19701607:      4:   19701601:
  48:      363..     367:   19701611..  19701615:      5:   19701608:
  49:      371..     374:   19701619..  19701622:      4:   19701616:
  50:      378..     382:   19701626..  19701630:      5:   19701623:
  51:      386..     389:   19701634..  19701637:      4:   19701631:
  52:      393..     397:   19701641..  19701645:      5:   19701638:
  53:      401..     404:   19701649..  19701652:      4:   19701646:
  54:      408..     412:   19701656..  19701660:      5:   19701653:
  55:      416..     419:   19701664..  19701667:      4:   19701661:
  56:      423..     427:   19701671..  19701675:      5:   19701668:
  57:      431..     434:   19701679..  19701682:      4:   19701676:
  58:      438..     442:   19701686..  19701690:      5:   19701683:
  59:      446..     449:   19701694..  19701697:      4:   19701691:
  60:      453..     457:   19701701..  19701705:      5:   19701698:
  61:      461..     464:   19701709..  19701712:      4:   19701706:
  62:      468..     472:   19701716..  19701720:      5:   19701713:
  63:      476..     479:   19701724..  19701727:      4:   19701721:
  64:      483..     487:   19701731..  19701735:      5:   19701728:
  65:      491..     494:   19701739..  19701742:      4:   19701736:
  66:      498..     502:   19701746..  19701750:      5:   19701743:
  67:      506..     509:   19701754..  19701757:      4:   19701751:
  68:      513..     517:   19701761..  19701765:      5:   19701758:
  69:      521..     524:   19701769..  19701772:      4:   19701766:
  70:      528..     532:   19701776..  19701780:      5:   19701773:
  71:      536..     539:   19701784..  19701787:      4:   19701781:
  72:      543..     547:   19701791..  19701795:      5:   19701788:
  73:      551..     554:   19701799..  19701802:      4:   19701796:
  74:      558..     562:   19701806..  19701810:      5:   19701803:
  75:      566..     569:   19701814..  19701817:      4:   19701811:
  76:      573..     577:   19701821..  19701825:      5:   19701818:
  77:      581..     584:   19701829..  19701832:      4:   19701826:
  78:      588..     592:   19701836..  19701840:      5:   19701833:
  79:      596..     599:   19701844..  19701847:      4:   19701841:
  80:      603..     607:   19701851..  19701855:      5:   19701848:
  81:      611..     614:   19701859..  19701862:      4:   19701856:
  82:      618..     622:   19701866..  19701870:      5:   19701863:
  83:      626..     629:   19701874..  19701877:      4:   19701871:
  84:      633..     637:   19701881..  19701885:      5:   19701878:
  85:      641..     644:   19701889..  19701892:      4:   19701886:
  86:      648..     652:   19701896..  19701900:      5:   19701893:
  87:      656..     659:   19701904..  19701907:      4:   19701901:
  88:      663..     667:   19701911..  19701915:      5:   19701908:
  89:      671..     674:   19701919..  19701922:      4:   19701916:
  90:      678..     682:   19701926..  19701930:      5:   19701923:
  91:      686..     689:   19701934..  19701937:      4:   19701931:
  92:      693..     697:   19701941..  19701945:      5:   19701938:
  93:      701..     704:   19701949..  19701952:      4:   19701946:
  94:      708..     712:   19701956..  19701960:      5:   19701953:
  95:      716..     719:   19701964..  19701967:      4:   19701961:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 3072000 (750 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        3..       7:   19702275..  19702279:      5:            
   1:       11..      14:   19702283..  19702286:      4:   19702280:
   2:       18..      22:   19702290..  19702294:      5:   19702287:
   3:       26..      29:   19702298..  19702301:      4:   19702295:
   4:       33..      37:   19702305..  19702309:      5:   19702302:
   5:       41..      44:   19702313..  19702316:      4:   19702310:
   6:       48..      52:   19702320..  19702324:      5:   19702317:
   7:       56..      59:   19702328..  19702331:      4:   19702325:
   8:       63..      67:   19702335..  19702339:      5:   19702332:
   9:       71..      74:   19702343..  19702346:      4:   19702340:
  10:       78..      82:   19702350..  19702354:      5:   19702347:
  11:       86..      89:   19702358..  19702361:      4:   19702355:
  12:       93..      97:   19702365..  19702369:      5:   19702362:
  13:      101..     104:   19702373..  19702376:      4:   19702370:
  14:      108..     112:   19702380..  19702384:      5:   19702377:
  15:      116..     119:   19702388..  19702391:      4:   19702385:
  16:      123..     127:   19702395..  19702399:      5:   19702392:
  17:      131..     134:   19702403..  19702406:      4:   19702400:
  18:      138..     142:   19702410..  19702414:      5:   19702407:
  19:      146..     149:   19702418..  19702421:      4:   19702415:
  20:      153..     157:   19702425..  19702429:      5:   19702422:
  21:      161..     164:   19702433..  19702436:      4:   19702430:
  22:      168..     172:   19702440..  19702444:      5:   19702437:
  23:      176..     179:   19702448..  19702451:      4:   19702445:
  24:      183..     187:   19702455..  19702459:      5:   19702452:
  25:      191..     194:   19702463..  19702466:      4:   19702460:
  26:      198..     202:   19702470..  19702474:      5:   19702467:
  27:      206..     209:   19702478..  19702481:      4:   19702475:
  28:      213..     217:   19702485..  19702489:      5:   19702482:
  29:      221..     224:   19702493..  19702496:      4:   19702490:
  30:      228..     232:   19702500..  19702504:      5:   19702497:
  31:      236..     239:   19702508..  19702511:      4:   19702505:
  32:      243..     247:   19702515..  19702519:      5:   19702512:
  33:      251..     254:   19702523..  19702526:      4:   19702520:
  34:      258..     262:   19702530..  19702534:      5:   19702527:
  35:      266..     269:   19702538..  19702541:      4:   19702535:
  36:      273..     277:   19702545..  19702549:      5:   19702542:
  37:      281..     284:   19702553..  19702556:      4:   19702550:
  38:      288..     292:   19702560..  19702564:      5:   19702557:
  39:      296..     299:   19702568..  19702571:      4:   19702565:
  40:      303..     307:   19702575..  19702579:      5:   19702572:
  41:      311..     314:   19702583..  19702586:      4:   19702580:
  42:      318..     322:   19702590..  19702594:      5:   19702587:
  43:      326..     329:   19702598..  19702601:      4:   19702595:
  44:      333..     337:   19702605..  19702609:      5:   19702602:
  45:      341..     344:   19702613..  19702616:      4:   19702610:
  46:      348..     352:   19702620..  19702624:      5:   19702617:
  47:      356..     359:   19702628..  19702631:      4:   19702625:
  48:      363..     367:   19702635..  19702639:      5:   19702632:
  49:      371..     374:   19702643..  19702646:      4:   19702640:
  50:      378..     382:   19702650..  19702654:      5:   19702647:
  51:      386..     389:   19702658..  19702661:      4:   19702655:
  52:      393..     397:   19702665..  19702669:      5:   19702662:
  53:      401..     404:   19702673..  19702676:      4:   19702670:
  54:      408..     412:   19702680..  19702684:      5:   19702677:
  55:      416..     419:   19702688..  19702691:      4:   19702685:
  56:      423..     427:   19702695..  19702699:      5:   19702692:
  57:      431..     434:   19702703..  19702706:      4:   19702700:
  58:      438..     442:   19702710..  19702714:      5:   19702707:
  59:      446..     449:   19702718..  19702721:      4:   19702715:
  60:      453..     457:   19702725..  19702729:      5:   19702722:
  61:      461..     464:   19702733..  19702736:      4:   19702730:
  62:      468..     472:   19702740..  19702744:      5:   19702737:
  63:      476..     479:   19702748..  19702751:      4:   19702745:
  64:      483..     487:   19702755..  19702759:      5:   19702752:
  65:      491..     494:   19702763..  19702766:      4:   19702760:
  66:      498..     502:   19702770..  19702774:      5:   19702767:
  67:      506..     509:   19702778..  19702781:      4:   19702775:
  68:      513..     517:   19702785..  19702789:      5:   19702782:
  69:      521..     524:   19702793..  19702796:      4:   19702790:
  70:      528..     532:   19702800..  19702804:      5:   19702797:
  71:      536..     539:   19702808..  19702811:      4:   19702805:
  72:      543..     547:   19702815..  19702819:      5:   19702812:
  73:      551..     554:   19702823..  19702826:      4:   19702820:
  74:      558..     562:   19702830..  19702834:      5:   19702827:
  75:      566..     569:   19702838..  19702841:      4:   19702835:
  76:      573..     577:   19702845..  19702849:      5:   19702842:
  77:      581..     584:   19702853..  19702856:      4:   19702850:
  78:      588..     592:   19702860..  19702864:      5:   19702857:
  79:      596..     599:   19702868..  19702871:      4:   19702865:
  80:      603..     607:   19702875..  19702879:      5:   19702872:
  81:      611..     614:   19702883..  19702886:      4:   19702880:
  82:      618..     622:   19702890..  19702894:      5:   19702887:
  83:      626..     629:   19702898..  19702901:      4:   19702895:
  84:      633..     637:   19702905..  19702909:      5:   19702902:
  85:      641..     644:   19702913..  19702916:      4:   19702910:
  86:      648..     652:   19702920..  19702924:      5:   19702917:
  87:      656..     659:   19702928..  19702931:      4:   19702925:
  88:      663..     667:   19702935..  19702939:      5:   19702932:
  89:      671..     674:   19702943..  19702946:      4:   19702940:
  90:      678..     682:   19702950..  19702954:      5:   19702947:
  91:      686..     689:   19702958..  19702961:      4:   19702955:
  92:      693..     697:   19702965..  19702969:      5:   19702962:
  93:      701..     704:   19702973..  19702976:      4:   19702970:
  94:      708..     712:   19702980..  19702984:      5:   19702977:
  95:      716..     719:   19702988..  19702991:      4:   19702985:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 17 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ sed 's/ [a-z,][a-z,]*$//' ff1
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 34816 (9 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   56682612..  56682616:      5:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 34816 (9 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   56682617..  56682621:      5:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 17 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ sed 's/ [a-z,][a-z,]*$//' ff1
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 69632 (17 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19694052..  19694056:      5:            
   1:       12..      16:   19694060..  19694064:      5:   19694057: eof
j1: 2 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 69632 (17 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19694564..  19694568:      5:            
   1:       12..      16:   19694572..  19694576:      5:   19694569: eof
j2: 2 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 17 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1079296 (264 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19703300..  19703304:      5:            
   1:       12..      16:   19703308..  19703312:      5:   19703305:
   2:       21..      25:   19703317..  19703321:      5:   19703313:
   3:       29..      33:   19703325..  19703329:      5:   19703322:
   4:       38..      42:   19703334..  19703338:      5:   19703330:
   5:       46..      50:   19703342..  19703346:      5:   19703339:
   6:       55..      59:   19703351..  19703355:      5:   19703347:
   7:       63..      67:   19703359..  19703363:      5:   19703356:
   8:       72..      76:   19703368..  19703372:      5:   19703364:
   9:       80..      84:   19703376..  19703380:      5:   19703373:
  10:       89..      93:   19703385..  19703389:      5:   19703381:
  11:       97..     101:   19703393..  19703397:      5:   19703390:
  12:      106..     110:   19703402..  19703406:      5:   19703398:
  13:      114..     118:   19703410..  19703414:      5:   19703407:
  14:      123..     127:   19703419..  19703423:      5:   19703415:
  15:      131..     135:   19703427..  19703431:      5:   19703424:
  16:      140..     144:   19703436..  19703440:      5:   19703432:
  17:      148..     152:   19703444..  19703448:      5:   19703441:
  18:      157..     161:   19703453..  19703457:      5:   19703449:
  19:      165..     169:   19703461..  19703465:      5:   19703458:
  20:      174..     178:   19703470..  19703474:      5:   19703466:
  21:      182..     186:   19703478..  19703482:      5:   19703475:
  22:      191..     195:   19703487..  19703491:      5:   19703483:
  23:      199..     203:   19703495..  19703499:      5:   19703492:
  24:      208..     212:   19703504..  19703508:      5:   19703500:
  25:      216..     220:   19703512..  19703516:      5:   19703509:
  26:      225..     229:   19703521..  19703525:      5:   19703517:
  27:      233..     237:   19703529..  19703533:      5:   19703526:
  28:      242..     246:   19703538..  19703542:      5:   19703534:
  29:      250..     254:   19703546..  19703550:      5:   19703543:
  30:      259..     263:   19703555..  19703559:      5:   19703551: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1079296 (264 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19703812..  19703816:      5:            
   1:       12..      16:   19703820..  19703824:      5:   19703817:
   2:       21..      25:   19703829..  19703833:      5:   19703825:
   3:       29..      33:   19703837..  19703841:      5:   19703834:
   4:       38..      42:   19703846..  19703850:      5:   19703842:
   5:       46..      50:   19703854..  19703858:      5:   19703851:
   6:       55..      59:   19703863..  19703867:      5:   19703859:
   7:       63..      67:   19703871..  19703875:      5:   19703868:
   8:       72..      76:   19703880..  19703884:      5:   19703876:
   9:       80..      84:   19703888..  19703892:      5:   19703885:
  10:       89..      93:   19703897..  19703901:      5:   19703893:
  11:       97..     101:   19703905..  19703909:      5:   19703902:
  12:      106..     110:   19703914..  19703918:      5:   19703910:
  13:      114..     118:   19703922..  19703926:      5:   19703919:
  14:      123..     127:   19703931..  19703935:      5:   19703927:
  15:      131..     135:   19703939..  19703943:      5:   19703936:
  16:      140..     144:   19703948..  19703952:      5:   19703944:
  17:      148..     152:   19703956..  19703960:      5:   19703953:
  18:      157..     161:   19703965..  19703969:      5:   19703961:
  19:      165..     169:   19703973..  19703977:      5:   19703970:
  20:      174..     178:   19703982..  19703986:      5:   19703978:
  21:      182..     186:   19703990..  19703994:      5:   19703987:
  22:      191..     195:   19703999..  19704003:      5:   19703995:
  23:      199..     203:   19704007..  19704011:      5:   19704004:
  24:      208..     212:   19704016..  19704020:      5:   19704012:
  25:      216..     220:   19704024..  19704028:      5:   19704021:
  26:      225..     229:   19704033..  19704037:      5:   19704029:
  27:      233..     237:   19704041..  19704045:      5:   19704038:
  28:      242..     246:   19704050..  19704054:      5:   19704046:
  29:      250..     254:   19704058..  19704062:      5:   19704055:
  30:      259..     263:   19704067..  19704071:      5:   19704063: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 17 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 3481600 (850 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19704324..  19704328:      5:            
   1:       12..      16:   19704332..  19704336:      5:   19704329:
   2:       21..      25:   19704341..  19704345:      5:   19704337:
   3:       29..      33:   19704349..  19704353:      5:   19704346:
   4:       38..      42:   19704358..  19704362:      5:   19704354:
   5:       46..      50:   19704366..  19704370:      5:   19704363:
   6:       55..      59:   19704375..  19704379:      5:   19704371:
   7:       63..      67:   19704383..  19704387:      5:   19704380:
   8:       72..      76:   19704392..  19704396:      5:   19704388:
   9:       80..      84:   19704400..  19704404:      5:   19704397:
  10:       89..      93:   19704409..  19704413:      5:   19704405:
  11:       97..     101:   19704417..  19704421:      5:   19704414:
  12:      106..     110:   19704426..  19704430:      5:   19704422:
  13:      114..     118:   19704434..  19704438:      5:   19704431:
  14:      123..     127:   19704443..  19704447:      5:   19704439:
  15:      131..     135:   19704451..  19704455:      5:   19704448:
  16:      140..     144:   19704460..  19704464:      5:   19704456:
  17:      148..     152:   19704468..  19704472:      5:   19704465:
  18:      157..     161:   19704477..  19704481:      5:   19704473:
  19:      165..     169:   19704485..  19704489:      5:   19704482:
  20:      174..     178:   19704494..  19704498:      5:   19704490:
  21:      182..     186:   19704502..  19704506:      5:   19704499:
  22:      191..     195:   19704511..  19704515:      5:   19704507:
  23:      199..     203:   19704519..  19704523:      5:   19704516:
  24:      208..     212:   19704528..  19704532:      5:   19704524:
  25:      216..     220:   19704536..  19704540:      5:   19704533:
  26:      225..     229:   19704545..  19704549:      5:   19704541:
  27:      233..     237:   19704553..  19704557:      5:   19704550:
  28:      242..     246:   19704562..  19704566:      5:   19704558:
  29:      250..     254:   19704570..  19704574:      5:   19704567:
  30:      259..     263:   19704579..  19704583:      5:   19704575:
  31:      267..     271:   19704587..  19704591:      5:   19704584:
  32:      276..     280:   19704596..  19704600:      5:   19704592:
  33:      284..     288:   19704604..  19704608:      5:   19704601:
  34:      293..     297:   19704613..  19704617:      5:   19704609:
  35:      301..     305:   19704621..  19704625:      5:   19704618:
  36:      310..     314:   19704630..  19704634:      5:   19704626:
  37:      318..     322:   19704638..  19704642:      5:   19704635:
  38:      327..     331:   19704647..  19704651:      5:   19704643:
  39:      335..     339:   19704655..  19704659:      5:   19704652:
  40:      344..     348:   19704664..  19704668:      5:   19704660:
  41:      352..     356:   19704672..  19704676:      5:   19704669:
  42:      361..     365:   19704681..  19704685:      5:   19704677:
  43:      369..     373:   19704689..  19704693:      5:   19704686:
  44:      378..     382:   19704698..  19704702:      5:   19704694:
  45:      386..     390:   19704706..  19704710:      5:   19704703:
  46:      395..     399:   19704715..  19704719:      5:   19704711:
  47:      403..     407:   19704723..  19704727:      5:   19704720:
  48:      412..     416:   19704732..  19704736:      5:   19704728:
  49:      420..     424:   19704740..  19704744:      5:   19704737:
  50:      429..     433:   19704749..  19704753:      5:   19704745:
  51:      437..     441:   19704757..  19704761:      5:   19704754:
  52:      446..     450:   19704766..  19704770:      5:   19704762:
  53:      454..     458:   19704774..  19704778:      5:   19704771:
  54:      463..     467:   19704783..  19704787:      5:   19704779:
  55:      471..     475:   19704791..  19704795:      5:   19704788:
  56:      480..     484:   19704800..  19704804:      5:   19704796:
  57:      488..     492:   19704808..  19704812:      5:   19704805:
  58:      497..     501:   19704817..  19704821:      5:   19704813:
  59:      505..     509:   19704825..  19704829:      5:   19704822:
  60:      514..     518:   19704834..  19704838:      5:   19704830:
  61:      522..     526:   19704842..  19704846:      5:   19704839:
  62:      531..     535:   19704851..  19704855:      5:   19704847:
  63:      539..     543:   19704859..  19704863:      5:   19704856:
  64:      548..     552:   19704868..  19704872:      5:   19704864:
  65:      556..     560:   19704876..  19704880:      5:   19704873:
  66:      565..     569:   19704885..  19704889:      5:   19704881:
  67:      573..     577:   19704893..  19704897:      5:   19704890:
  68:      582..     586:   19704902..  19704906:      5:   19704898:
  69:      590..     594:   19704910..  19704914:      5:   19704907:
  70:      599..     603:   19704919..  19704923:      5:   19704915:
  71:      607..     611:   19704927..  19704931:      5:   19704924:
  72:      616..     620:   19704936..  19704940:      5:   19704932:
  73:      624..     628:   19704944..  19704948:      5:   19704941:
  74:      633..     637:   19704953..  19704957:      5:   19704949:
  75:      641..     645:   19704961..  19704965:      5:   19704958:
  76:      650..     654:   19704970..  19704974:      5:   19704966:
  77:      658..     662:   19704978..  19704982:      5:   19704975:
  78:      667..     671:   19704987..  19704991:      5:   19704983:
  79:      675..     679:   19704995..  19704999:      5:   19704992:
  80:      684..     688:   19705004..  19705008:      5:   19705000:
  81:      692..     696:   19705012..  19705016:      5:   19705009:
  82:      701..     705:   19705021..  19705025:      5:   19705017:
  83:      709..     713:   19705029..  19705033:      5:   19705026:
  84:      718..     722:   19705038..  19705042:      5:   19705034:
  85:      726..     730:   19705046..  19705050:      5:   19705043:
  86:      735..     739:   19705055..  19705059:      5:   19705051:
  87:      743..     747:   19705063..  19705067:      5:   19705060:
  88:      752..     756:   19705072..  19705076:      5:   19705068:
  89:      760..     764:   19705080..  19705084:      5:   19705077:
  90:      769..     773:   19705089..  19705093:      5:   19705085:
  91:      777..     781:   19705097..  19705101:      5:   19705094:
  92:      786..     790:   19705106..  19705110:      5:   19705102:
  93:      794..     798:   19705114..  19705118:      5:   19705111:
  94:      803..     807:   19705123..  19705127:      5:   19705119:
  95:      811..     815:   19705131..  19705135:      5:   19705128:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 3481600 (850 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       8:   19705348..  19705352:      5:            
   1:       12..      16:   19705356..  19705360:      5:   19705353:
   2:       21..      25:   19705365..  19705369:      5:   19705361:
   3:       29..      33:   19705373..  19705377:      5:   19705370:
   4:       38..      42:   19705382..  19705386:      5:   19705378:
   5:       46..      50:   19705390..  19705394:      5:   19705387:
   6:       55..      59:   19705399..  19705403:      5:   19705395:
   7:       63..      67:   19705407..  19705411:      5:   19705404:
   8:       72..      76:   19705416..  19705420:      5:   19705412:
   9:       80..      84:   19705424..  19705428:      5:   19705421:
  10:       89..      93:   19705433..  19705437:      5:   19705429:
  11:       97..     101:   19705441..  19705445:      5:   19705438:
  12:      106..     110:   19705450..  19705454:      5:   19705446:
  13:      114..     118:   19705458..  19705462:      5:   19705455:
  14:      123..     127:   19705467..  19705471:      5:   19705463:
  15:      131..     135:   19705475..  19705479:      5:   19705472:
  16:      140..     144:   19705484..  19705488:      5:   19705480:
  17:      148..     152:   19705492..  19705496:      5:   19705489:
  18:      157..     161:   19705501..  19705505:      5:   19705497:
  19:      165..     169:   19705509..  19705513:      5:   19705506:
  20:      174..     178:   19705518..  19705522:      5:   19705514:
  21:      182..     186:   19705526..  19705530:      5:   19705523:
  22:      191..     195:   19705535..  19705539:      5:   19705531:
  23:      199..     203:   19705543..  19705547:      5:   19705540:
  24:      208..     212:   19705552..  19705556:      5:   19705548:
  25:      216..     220:   19705560..  19705564:      5:   19705557:
  26:      225..     229:   19705569..  19705573:      5:   19705565:
  27:      233..     237:   19705577..  19705581:      5:   19705574:
  28:      242..     246:   19705586..  19705590:      5:   19705582:
  29:      250..     254:   19705594..  19705598:      5:   19705591:
  30:      259..     263:   19705603..  19705607:      5:   19705599:
  31:      267..     271:   19705611..  19705615:      5:   19705608:
  32:      276..     280:   19705620..  19705624:      5:   19705616:
  33:      284..     288:   19705628..  19705632:      5:   19705625:
  34:      293..     297:   19705637..  19705641:      5:   19705633:
  35:      301..     305:   19705645..  19705649:      5:   19705642:
  36:      310..     314:   19705654..  19705658:      5:   19705650:
  37:      318..     322:   19705662..  19705666:      5:   19705659:
  38:      327..     331:   19705671..  19705675:      5:   19705667:
  39:      335..     339:   19705679..  19705683:      5:   19705676:
  40:      344..     348:   19705688..  19705692:      5:   19705684:
  41:      352..     356:   19705696..  19705700:      5:   19705693:
  42:      361..     365:   19705705..  19705709:      5:   19705701:
  43:      369..     373:   19705713..  19705717:      5:   19705710:
  44:      378..     382:   19705722..  19705726:      5:   19705718:
  45:      386..     390:   19705730..  19705734:      5:   19705727:
  46:      395..     399:   19705739..  19705743:      5:   19705735:
  47:      403..     407:   19705747..  19705751:      5:   19705744:
  48:      412..     416:   19705756..  19705760:      5:   19705752:
  49:      420..     424:   19705764..  19705768:      5:   19705761:
  50:      429..     433:   19705773..  19705777:      5:   19705769:
  51:      437..     441:   19705781..  19705785:      5:   19705778:
  52:      446..     450:   19705790..  19705794:      5:   19705786:
  53:      454..     458:   19705798..  19705802:      5:   19705795:
  54:      463..     467:   19705807..  19705811:      5:   19705803:
  55:      471..     475:   19705815..  19705819:      5:   19705812:
  56:      480..     484:   19705824..  19705828:      5:   19705820:
  57:      488..     492:   19705832..  19705836:      5:   19705829:
  58:      497..     501:   19705841..  19705845:      5:   19705837:
  59:      505..     509:   19705849..  19705853:      5:   19705846:
  60:      514..     518:   19705858..  19705862:      5:   19705854:
  61:      522..     526:   19705866..  19705870:      5:   19705863:
  62:      531..     535:   19705875..  19705879:      5:   19705871:
  63:      539..     543:   19705883..  19705887:      5:   19705880:
  64:      548..     552:   19705892..  19705896:      5:   19705888:
  65:      556..     560:   19705900..  19705904:      5:   19705897:
  66:      565..     569:   19705909..  19705913:      5:   19705905:
  67:      573..     577:   19705917..  19705921:      5:   19705914:
  68:      582..     586:   19705926..  19705930:      5:   19705922:
  69:      590..     594:   19705934..  19705938:      5:   19705931:
  70:      599..     603:   19705943..  19705947:      5:   19705939:
  71:      607..     611:   19705951..  19705955:      5:   19705948:
  72:      616..     620:   19705960..  19705964:      5:   19705956:
  73:      624..     628:   19705968..  19705972:      5:   19705965:
  74:      633..     637:   19705977..  19705981:      5:   19705973:
  75:      641..     645:   19705985..  19705989:      5:   19705982:
  76:      650..     654:   19705994..  19705998:      5:   19705990:
  77:      658..     662:   19706002..  19706006:      5:   19705999:
  78:      667..     671:   19706011..  19706015:      5:   19706007:
  79:      675..     679:   19706019..  19706023:      5:   19706016:
  80:      684..     688:   19706028..  19706032:      5:   19706024:
  81:      692..     696:   19706036..  19706040:      5:   19706033:
  82:      701..     705:   19706045..  19706049:      5:   19706041:
  83:      709..     713:   19706053..  19706057:      5:   19706050:
  84:      718..     722:   19706062..  19706066:      5:   19706058:
  85:      726..     730:   19706070..  19706074:      5:   19706067:
  86:      735..     739:   19706079..  19706083:      5:   19706075:
  87:      743..     747:   19706087..  19706091:      5:   19706084:
  88:      752..     756:   19706096..  19706100:      5:   19706092:
  89:      760..     764:   19706104..  19706108:      5:   19706101:
  90:      769..     773:   19706113..  19706117:      5:   19706109:
  91:      777..     781:   19706121..  19706125:      5:   19706118:
  92:      786..     790:   19706130..  19706134:      5:   19706126:
  93:      794..     798:   19706138..  19706142:      5:   19706135:
  94:      803..     807:   19706147..  19706151:      5:   19706143:
  95:      811..     815:   19706155..  19706159:      5:   19706152:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 19 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 38912 (10 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   56682629..  56682634:      6:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 38912 (10 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   56682635..  56682640:      6:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 19 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ sed 's/ [a-z,][a-z,]*$//' ff1
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 77824 (19 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19694948..  19694953:      6:            
   1:       14..      18:   19694958..  19694962:      5:   19694954: eof
j1: 2 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 77824 (19 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19695524..  19695529:      6:            
   1:       14..      18:   19695534..  19695538:      5:   19695530: eof
j2: 2 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 19 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ f ff2
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1206272 (295 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19706372..  19706377:      6:            
   1:       14..      18:   19706382..  19706386:      5:   19706378:
   2:       23..      28:   19706391..  19706396:      6:   19706387:
   3:       33..      37:   19706401..  19706405:      5:   19706397:
   4:       42..      47:   19706410..  19706415:      6:   19706406:
   5:       52..      56:   19706420..  19706424:      5:   19706416:
   6:       61..      66:   19706429..  19706434:      6:   19706425:
   7:       71..      75:   19706439..  19706443:      5:   19706435:
   8:       80..      85:   19706448..  19706453:      6:   19706444:
   9:       90..      94:   19706458..  19706462:      5:   19706454:
  10:       99..     104:   19706467..  19706472:      6:   19706463:
  11:      109..     113:   19706477..  19706481:      5:   19706473:
  12:      118..     123:   19706486..  19706491:      6:   19706482:
  13:      128..     132:   19706496..  19706500:      5:   19706492:
  14:      137..     142:   19706505..  19706510:      6:   19706501:
  15:      147..     151:   19706515..  19706519:      5:   19706511:
  16:      156..     161:   19706524..  19706529:      6:   19706520:
  17:      166..     170:   19706534..  19706538:      5:   19706530:
  18:      175..     180:   19706543..  19706548:      6:   19706539:
  19:      185..     189:   19706553..  19706557:      5:   19706549:
  20:      194..     199:   19706562..  19706567:      6:   19706558:
  21:      204..     208:   19706572..  19706576:      5:   19706568:
  22:      213..     218:   19706581..  19706586:      6:   19706577:
  23:      223..     227:   19706591..  19706595:      5:   19706587:
  24:      232..     237:   19706600..  19706605:      6:   19706596:
  25:      242..     246:   19706610..  19706614:      5:   19706606:
  26:      251..     256:   19706619..  19706624:      6:   19706615:
  27:      261..     265:   19706629..  19706633:      5:   19706625:
  28:      270..     275:   19706638..  19706643:      6:   19706634:
  29:      280..     284:   19706648..  19706652:      5:   19706644:
  30:      289..     294:   19706657..  19706662:      6:   19706653: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1206272 (295 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19706884..  19706889:      6:            
   1:       14..      18:   19706894..  19706898:      5:   19706890:
   2:       23..      28:   19706903..  19706908:      6:   19706899:
   3:       33..      37:   19706913..  19706917:      5:   19706909:
   4:       42..      47:   19706922..  19706927:      6:   19706918:
   5:       52..      56:   19706932..  19706936:      5:   19706928:
   6:       61..      66:   19706941..  19706946:      6:   19706937:
   7:       71..      75:   19706951..  19706955:      5:   19706947:
   8:       80..      85:   19706960..  19706965:      6:   19706956:
   9:       90..      94:   19706970..  19706974:      5:   19706966:
  10:       99..     104:   19706979..  19706984:      6:   19706975:
  11:      109..     113:   19706989..  19706993:      5:   19706985:
  12:      118..     123:   19706998..  19707003:      6:   19706994:
  13:      128..     132:   19707008..  19707012:      5:   19707004:
  14:      137..     142:   19707017..  19707022:      6:   19707013:
  15:      147..     151:   19707027..  19707031:      5:   19707023:
  16:      156..     161:   19707036..  19707041:      6:   19707032:
  17:      166..     170:   19707046..  19707050:      5:   19707042:
  18:      175..     180:   19707055..  19707060:      6:   19707051:
  19:      185..     189:   19707065..  19707069:      5:   19707061:
  20:      194..     199:   19707074..  19707079:      6:   19707070:
  21:      204..     208:   19707084..  19707088:      5:   19707080:
  22:      213..     218:   19707093..  19707098:      6:   19707089:
  23:      223..     227:   19707103..  19707107:      5:   19707099:
  24:      232..     237:   19707112..  19707117:      6:   19707108:
  25:      242..     246:   19707122..  19707126:      5:   19707118:
  26:      251..     256:   19707131..  19707136:      6:   19707127:
  27:      261..     265:   19707141..  19707145:      5:   19707137:
  28:      270..     275:   19707150..  19707155:      6:   19707146:
  29:      280..     284:   19707160..  19707164:      5:   19707156:
  30:      289..     294:   19707169..  19707174:      6:   19707165: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 19 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 3891200 (950 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19707396..  19707401:      6:            
   1:       14..      18:   19707406..  19707410:      5:   19707402:
   2:       23..      28:   19707415..  19707420:      6:   19707411:
   3:       33..      37:   19707425..  19707429:      5:   19707421:
   4:       42..      47:   19707434..  19707439:      6:   19707430:
   5:       52..      56:   19707444..  19707448:      5:   19707440:
   6:       61..      66:   19707453..  19707458:      6:   19707449:
   7:       71..      75:   19707463..  19707467:      5:   19707459:
   8:       80..      85:   19707472..  19707477:      6:   19707468:
   9:       90..      94:   19707482..  19707486:      5:   19707478:
  10:       99..     104:   19707491..  19707496:      6:   19707487:
  11:      109..     113:   19707501..  19707505:      5:   19707497:
  12:      118..     123:   19707510..  19707515:      6:   19707506:
  13:      128..     132:   19707520..  19707524:      5:   19707516:
  14:      137..     142:   19707529..  19707534:      6:   19707525:
  15:      147..     151:   19707539..  19707543:      5:   19707535:
  16:      156..     161:   19707548..  19707553:      6:   19707544:
  17:      166..     170:   19707558..  19707562:      5:   19707554:
  18:      175..     180:   19707567..  19707572:      6:   19707563:
  19:      185..     189:   19707577..  19707581:      5:   19707573:
  20:      194..     199:   19707586..  19707591:      6:   19707582:
  21:      204..     208:   19707596..  19707600:      5:   19707592:
  22:      213..     218:   19707605..  19707610:      6:   19707601:
  23:      223..     227:   19707615..  19707619:      5:   19707611:
  24:      232..     237:   19707624..  19707629:      6:   19707620:
  25:      242..     246:   19707634..  19707638:      5:   19707630:
  26:      251..     256:   19707643..  19707648:      6:   19707639:
  27:      261..     265:   19707653..  19707657:      5:   19707649:
  28:      270..     275:   19707662..  19707667:      6:   19707658:
  29:      280..     284:   19707672..  19707676:      5:   19707668:
  30:      289..     294:   19707681..  19707686:      6:   19707677:
  31:      299..     303:   19707691..  19707695:      5:   19707687:
  32:      308..     313:   19707700..  19707705:      6:   19707696:
  33:      318..     322:   19707710..  19707714:      5:   19707706:
  34:      327..     332:   19707719..  19707724:      6:   19707715:
  35:      337..     341:   19707729..  19707733:      5:   19707725:
  36:      346..     351:   19707738..  19707743:      6:   19707734:
  37:      356..     360:   19707748..  19707752:      5:   19707744:
  38:      365..     370:   19707757..  19707762:      6:   19707753:
  39:      375..     379:   19707767..  19707771:      5:   19707763:
  40:      384..     389:   19707776..  19707781:      6:   19707772:
  41:      394..     398:   19707786..  19707790:      5:   19707782:
  42:      403..     408:   19707795..  19707800:      6:   19707791:
  43:      413..     417:   19707805..  19707809:      5:   19707801:
  44:      422..     427:   19707814..  19707819:      6:   19707810:
  45:      432..     436:   19707824..  19707828:      5:   19707820:
  46:      441..     446:   19707833..  19707838:      6:   19707829:
  47:      451..     455:   19707843..  19707847:      5:   19707839:
  48:      460..     465:   19707852..  19707857:      6:   19707848:
  49:      470..     474:   19707862..  19707866:      5:   19707858:
  50:      479..     484:   19707871..  19707876:      6:   19707867:
  51:      489..     493:   19707881..  19707885:      5:   19707877:
  52:      498..     503:   19707890..  19707895:      6:   19707886:
  53:      508..     512:   19707900..  19707904:      5:   19707896:
  54:      517..     522:   19707909..  19707914:      6:   19707905:
  55:      527..     531:   19707919..  19707923:      5:   19707915:
  56:      536..     541:   19707928..  19707933:      6:   19707924:
  57:      546..     550:   19707938..  19707942:      5:   19707934:
  58:      555..     560:   19707947..  19707952:      6:   19707943:
  59:      565..     569:   19707957..  19707961:      5:   19707953:
  60:      574..     579:   19707966..  19707971:      6:   19707962:
  61:      584..     588:   19707976..  19707980:      5:   19707972:
  62:      593..     598:   19707985..  19707990:      6:   19707981:
  63:      603..     607:   19707995..  19707999:      5:   19707991:
  64:      612..     617:   19708004..  19708009:      6:   19708000:
  65:      622..     626:   19708014..  19708018:      5:   19708010:
  66:      631..     636:   19708023..  19708028:      6:   19708019:
  67:      641..     645:   19708033..  19708037:      5:   19708029:
  68:      650..     655:   19708042..  19708047:      6:   19708038:
  69:      660..     664:   19708052..  19708056:      5:   19708048:
  70:      669..     674:   19708061..  19708066:      6:   19708057:
  71:      679..     683:   19708071..  19708075:      5:   19708067:
  72:      688..     693:   19708080..  19708085:      6:   19708076:
  73:      698..     702:   19708090..  19708094:      5:   19708086:
  74:      707..     712:   19708099..  19708104:      6:   19708095:
  75:      717..     721:   19708109..  19708113:      5:   19708105:
  76:      726..     731:   19708118..  19708123:      6:   19708114:
  77:      736..     740:   19708128..  19708132:      5:   19708124:
  78:      745..     750:   19708137..  19708142:      6:   19708133:
  79:      755..     759:   19708147..  19708151:      5:   19708143:
  80:      764..     769:   19708156..  19708161:      6:   19708152:
  81:      774..     778:   19708166..  19708170:      5:   19708162:
  82:      783..     788:   19708175..  19708180:      6:   19708171:
  83:      793..     797:   19708185..  19708189:      5:   19708181:
  84:      802..     807:   19708194..  19708199:      6:   19708190:
  85:      812..     816:   19708204..  19708208:      5:   19708200:
  86:      821..     826:   19708213..  19708218:      6:   19708209:
  87:      831..     835:   19708223..  19708227:      5:   19708219:
  88:      840..     845:   19708232..  19708237:      6:   19708228:
  89:      850..     854:   19708242..  19708246:      5:   19708238:
  90:      859..     864:   19708251..  19708256:      6:   19708247:
  91:      869..     873:   19708261..  19708265:      5:   19708257:
  92:      878..     883:   19708270..  19708275:      6:   19708266:
  93:      888..     892:   19708280..  19708284:      5:   19708276:
  94:      897..     902:   19708289..  19708294:      6:   19708285:
  95:      907..     911:   19708299..  19708303:      5:   19708295:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 3891200 (950 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        4..       9:   19708420..  19708425:      6:            
   1:       14..      18:   19708430..  19708434:      5:   19708426:
   2:       23..      28:   19708439..  19708444:      6:   19708435:
   3:       33..      37:   19708449..  19708453:      5:   19708445:
   4:       42..      47:   19708458..  19708463:      6:   19708454:
   5:       52..      56:   19708468..  19708472:      5:   19708464:
   6:       61..      66:   19708477..  19708482:      6:   19708473:
   7:       71..      75:   19708487..  19708491:      5:   19708483:
   8:       80..      85:   19708496..  19708501:      6:   19708492:
   9:       90..      94:   19708506..  19708510:      5:   19708502:
  10:       99..     104:   19708515..  19708520:      6:   19708511:
  11:      109..     113:   19708525..  19708529:      5:   19708521:
  12:      118..     123:   19708534..  19708539:      6:   19708530:
  13:      128..     132:   19708544..  19708548:      5:   19708540:
  14:      137..     142:   19708553..  19708558:      6:   19708549:
  15:      147..     151:   19708563..  19708567:      5:   19708559:
  16:      156..     161:   19708572..  19708577:      6:   19708568:
  17:      166..     170:   19708582..  19708586:      5:   19708578:
  18:      175..     180:   19708591..  19708596:      6:   19708587:
  19:      185..     189:   19708601..  19708605:      5:   19708597:
  20:      194..     199:   19708610..  19708615:      6:   19708606:
  21:      204..     208:   19708620..  19708624:      5:   19708616:
  22:      213..     218:   19708629..  19708634:      6:   19708625:
  23:      223..     227:   19708639..  19708643:      5:   19708635:
  24:      232..     237:   19708648..  19708653:      6:   19708644:
  25:      242..     246:   19708658..  19708662:      5:   19708654:
  26:      251..     256:   19708667..  19708672:      6:   19708663:
  27:      261..     265:   19708677..  19708681:      5:   19708673:
  28:      270..     275:   19708686..  19708691:      6:   19708682:
  29:      280..     284:   19708696..  19708700:      5:   19708692:
  30:      289..     294:   19708705..  19708710:      6:   19708701:
  31:      299..     303:   19708715..  19708719:      5:   19708711:
  32:      308..     313:   19708724..  19708729:      6:   19708720:
  33:      318..     322:   19708734..  19708738:      5:   19708730:
  34:      327..     332:   19708743..  19708748:      6:   19708739:
  35:      337..     341:   19708753..  19708757:      5:   19708749:
  36:      346..     351:   19708762..  19708767:      6:   19708758:
  37:      356..     360:   19708772..  19708776:      5:   19708768:
  38:      365..     370:   19708781..  19708786:      6:   19708777:
  39:      375..     379:   19708791..  19708795:      5:   19708787:
  40:      384..     389:   19708800..  19708805:      6:   19708796:
  41:      394..     398:   19708810..  19708814:      5:   19708806:
  42:      403..     408:   19708819..  19708824:      6:   19708815:
  43:      413..     417:   19708829..  19708833:      5:   19708825:
  44:      422..     427:   19708838..  19708843:      6:   19708834:
  45:      432..     436:   19708848..  19708852:      5:   19708844:
  46:      441..     446:   19708857..  19708862:      6:   19708853:
  47:      451..     455:   19708867..  19708871:      5:   19708863:
  48:      460..     465:   19708876..  19708881:      6:   19708872:
  49:      470..     474:   19708886..  19708890:      5:   19708882:
  50:      479..     484:   19708895..  19708900:      6:   19708891:
  51:      489..     493:   19708905..  19708909:      5:   19708901:
  52:      498..     503:   19708914..  19708919:      6:   19708910:
  53:      508..     512:   19708924..  19708928:      5:   19708920:
  54:      517..     522:   19708933..  19708938:      6:   19708929:
  55:      527..     531:   19708943..  19708947:      5:   19708939:
  56:      536..     541:   19708952..  19708957:      6:   19708948:
  57:      546..     550:   19708962..  19708966:      5:   19708958:
  58:      555..     560:   19708971..  19708976:      6:   19708967:
  59:      565..     569:   19708981..  19708985:      5:   19708977:
  60:      574..     579:   19708990..  19708995:      6:   19708986:
  61:      584..     588:   19709000..  19709004:      5:   19708996:
  62:      593..     598:   19709009..  19709014:      6:   19709005:
  63:      603..     607:   19709019..  19709023:      5:   19709015:
  64:      612..     617:   19709028..  19709033:      6:   19709024:
  65:      622..     626:   19709038..  19709042:      5:   19709034:
  66:      631..     636:   19709047..  19709052:      6:   19709043:
  67:      641..     645:   19709057..  19709061:      5:   19709053:
  68:      650..     655:   19709066..  19709071:      6:   19709062:
  69:      660..     664:   19709076..  19709080:      5:   19709072:
  70:      669..     674:   19709085..  19709090:      6:   19709081:
  71:      679..     683:   19709095..  19709099:      5:   19709091:
  72:      688..     693:   19709104..  19709109:      6:   19709100:
  73:      698..     702:   19709114..  19709118:      5:   19709110:
  74:      707..     712:   19709123..  19709128:      6:   19709119:
  75:      717..     721:   19709133..  19709137:      5:   19709129:
  76:      726..     731:   19709142..  19709147:      6:   19709138:
  77:      736..     740:   19709152..  19709156:      5:   19709148:
  78:      745..     750:   19709161..  19709166:      6:   19709157:
  79:      755..     759:   19709171..  19709175:      5:   19709167:
  80:      764..     769:   19709180..  19709185:      6:   19709176:
  81:      774..     778:   19709190..  19709194:      5:   19709186:
  82:      783..     788:   19709199..  19709204:      6:   19709195:
  83:      793..     797:   19709209..  19709213:      5:   19709205:
  84:      802..     807:   19709218..  19709223:      6:   19709214:
  85:      812..     816:   19709228..  19709232:      5:   19709224:
  86:      821..     826:   19709237..  19709242:      6:   19709233:
  87:      831..     835:   19709247..  19709251:      5:   19709243:
  88:      840..     845:   19709256..  19709261:      6:   19709252:
  89:      850..     854:   19709266..  19709270:      5:   19709262:
  90:      859..     864:   19709275..  19709280:      6:   19709271:
  91:      869..     873:   19709285..  19709289:      5:   19709281:
  92:      878..     883:   19709294..  19709299:      6:   19709290:
  93:      888..     892:   19709304..  19709308:      5:   19709300:
  94:      897..     902:   19709313..  19709318:      6:   19709309:
  95:      907..     911:   19709323..  19709327:      5:   19709319:
+ test 0 = 1
+ for i in '$(seq 1 2 21)'
+ for j in 1 2 31 100
+ perl -e '$n = 21 * 1024; *F = *STDOUT;' -e 'for (1..1) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 43008 (11 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   56681267..  56681272:      6:             eof
j1: 1 extent found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 43008 (11 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   56681273..  56681278:      6:             eof
j2: 1 extent found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 21 * 1024; *F = *STDOUT;' -e 'for (1..2) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 86016 (21 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19695973..  19695978:      6:            
   1:       15..      20:   19695983..  19695988:      6:   19695979: eof
j1: 2 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 86016 (21 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19696293..  19696298:      6:            
   1:       15..      20:   19696303..  19696308:      6:   19696299: eof
j2: 2 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 21 * 1024; *F = *STDOUT;' -e 'for (1..31) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 1333248 (326 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19709445..  19709450:      6:            
   1:       15..      20:   19709455..  19709460:      6:   19709451:
   2:       26..      31:   19709466..  19709471:      6:   19709461:
   3:       36..      41:   19709476..  19709481:      6:   19709472:
   4:       47..      52:   19709487..  19709492:      6:   19709482:
   5:       57..      62:   19709497..  19709502:      6:   19709493:
   6:       68..      73:   19709508..  19709513:      6:   19709503:
   7:       78..      83:   19709518..  19709523:      6:   19709514:
   8:       89..      94:   19709529..  19709534:      6:   19709524:
   9:       99..     104:   19709539..  19709544:      6:   19709535:
  10:      110..     115:   19709550..  19709555:      6:   19709545:
  11:      120..     125:   19709560..  19709565:      6:   19709556:
  12:      131..     136:   19709571..  19709576:      6:   19709566:
  13:      141..     146:   19709581..  19709586:      6:   19709577:
  14:      152..     157:   19709592..  19709597:      6:   19709587:
  15:      162..     167:   19709602..  19709607:      6:   19709598:
  16:      173..     178:   19709613..  19709618:      6:   19709608:
  17:      183..     188:   19709623..  19709628:      6:   19709619:
  18:      194..     199:   19709634..  19709639:      6:   19709629:
  19:      204..     209:   19709644..  19709649:      6:   19709640:
  20:      215..     220:   19709655..  19709660:      6:   19709650:
  21:      225..     230:   19709665..  19709670:      6:   19709661:
  22:      236..     241:   19709676..  19709681:      6:   19709671:
  23:      246..     251:   19709686..  19709691:      6:   19709682:
  24:      257..     262:   19709697..  19709702:      6:   19709692:
  25:      267..     272:   19709707..  19709712:      6:   19709703:
  26:      278..     283:   19709718..  19709723:      6:   19709713:
  27:      288..     293:   19709728..  19709733:      6:   19709724:
  28:      299..     304:   19709739..  19709744:      6:   19709734:
  29:      309..     314:   19709749..  19709754:      6:   19709745:
  30:      320..     325:   19709760..  19709765:      6:   19709755: eof
j1: 31 extents found

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 1333248 (326 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19709957..  19709962:      6:            
   1:       15..      20:   19709967..  19709972:      6:   19709963:
   2:       26..      31:   19709978..  19709983:      6:   19709973:
   3:       36..      41:   19709988..  19709993:      6:   19709984:
   4:       47..      52:   19709999..  19710004:      6:   19709994:
   5:       57..      62:   19710009..  19710014:      6:   19710005:
   6:       68..      73:   19710020..  19710025:      6:   19710015:
   7:       78..      83:   19710030..  19710035:      6:   19710026:
   8:       89..      94:   19710041..  19710046:      6:   19710036:
   9:       99..     104:   19710051..  19710056:      6:   19710047:
  10:      110..     115:   19710062..  19710067:      6:   19710057:
  11:      120..     125:   19710072..  19710077:      6:   19710068:
  12:      131..     136:   19710083..  19710088:      6:   19710078:
  13:      141..     146:   19710093..  19710098:      6:   19710089:
  14:      152..     157:   19710104..  19710109:      6:   19710099:
  15:      162..     167:   19710114..  19710119:      6:   19710110:
  16:      173..     178:   19710125..  19710130:      6:   19710120:
  17:      183..     188:   19710135..  19710140:      6:   19710131:
  18:      194..     199:   19710146..  19710151:      6:   19710141:
  19:      204..     209:   19710156..  19710161:      6:   19710152:
  20:      215..     220:   19710167..  19710172:      6:   19710162:
  21:      225..     230:   19710177..  19710182:      6:   19710173:
  22:      236..     241:   19710188..  19710193:      6:   19710183:
  23:      246..     251:   19710198..  19710203:      6:   19710194:
  24:      257..     262:   19710209..  19710214:      6:   19710204:
  25:      267..     272:   19710219..  19710224:      6:   19710215:
  26:      278..     283:   19710230..  19710235:      6:   19710225:
  27:      288..     293:   19710240..  19710245:      6:   19710236:
  28:      299..     304:   19710251..  19710256:      6:   19710246:
  29:      309..     314:   19710261..  19710266:      6:   19710257:
  30:      320..     325:   19710272..  19710277:      6:   19710267: eof
j2: 31 extents found
+ test 0 = 1
+ for j in 1 2 31 100
+ perl -e '$n = 21 * 1024; *F = *STDOUT;' -e 'for (1..100) { sysseek (*F, $n, 1)' -e '&& syswrite (*F, chr($_)x$n) or die "$!"}'
+ cp --sparse=always j1 j2
+ cmp j1 j2
+ filefrag -vs j1
+ grep -F extent
+ filefrag -v j1
+ filefrag -vs j2
+ f ff1
+ perl /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/tests/filefrag-extent-compare
+ sed 's/ [a-z,][a-z,]*$//' ff1
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
Can't open perl script "/home/jfloyd/Documents/Projects/Proactive": No such file or directory
+ f ff2
+ sed 's/ [a-z,][a-z,]*$//' ff2
+ mawk '/^ *[0-9]/ {printf "%d %d ", $2, (NF>=6 ? $6 : (NF<5 ? $NF : $5)) }
            END {print ""}'
+ warn_ ignoring filefrag-reported extent map differences
+ case $IFS in
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
ignoring filefrag-reported extent map differences
+ test 9 = 2
+ printf '%s\n' 'ignoring filefrag-reported extent map differences'
+ sed 1q
+ head -n99 ff1 ff2
==> ff1 <==
Filesystem type is: ef53
File size of j1 is 4300800 (1050 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19710981..  19710986:      6:            
   1:       15..      20:   19710991..  19710996:      6:   19710987:
   2:       26..      31:   19711002..  19711007:      6:   19710997:
   3:       36..      41:   19711012..  19711017:      6:   19711008:
   4:       47..      52:   19711023..  19711028:      6:   19711018:
   5:       57..      62:   19711033..  19711038:      6:   19711029:
   6:       68..      73:   19711044..  19711049:      6:   19711039:
   7:       78..      83:   19711054..  19711059:      6:   19711050:
   8:       89..      94:   19711065..  19711070:      6:   19711060:
   9:       99..     104:   19711075..  19711080:      6:   19711071:
  10:      110..     115:   19711086..  19711091:      6:   19711081:
  11:      120..     125:   19711096..  19711101:      6:   19711092:
  12:      131..     136:   19711107..  19711112:      6:   19711102:
  13:      141..     146:   19711117..  19711122:      6:   19711113:
  14:      152..     157:   19711128..  19711133:      6:   19711123:
  15:      162..     167:   19711138..  19711143:      6:   19711134:
  16:      173..     178:   19711149..  19711154:      6:   19711144:
  17:      183..     188:   19711159..  19711164:      6:   19711155:
  18:      194..     199:   19711170..  19711175:      6:   19711165:
  19:      204..     209:   19711180..  19711185:      6:   19711176:
  20:      215..     220:   19711191..  19711196:      6:   19711186:
  21:      225..     230:   19711201..  19711206:      6:   19711197:
  22:      236..     241:   19711212..  19711217:      6:   19711207:
  23:      246..     251:   19711222..  19711227:      6:   19711218:
  24:      257..     262:   19711233..  19711238:      6:   19711228:
  25:      267..     272:   19711243..  19711248:      6:   19711239:
  26:      278..     283:   19711254..  19711259:      6:   19711249:
  27:      288..     293:   19711264..  19711269:      6:   19711260:
  28:      299..     304:   19711275..  19711280:      6:   19711270:
  29:      309..     314:   19711285..  19711290:      6:   19711281:
  30:      320..     325:   19711296..  19711301:      6:   19711291:
  31:      330..     335:   19711306..  19711311:      6:   19711302:
  32:      341..     346:   19711317..  19711322:      6:   19711312:
  33:      351..     356:   19711327..  19711332:      6:   19711323:
  34:      362..     367:   19711338..  19711343:      6:   19711333:
  35:      372..     377:   19711348..  19711353:      6:   19711344:
  36:      383..     388:   19711359..  19711364:      6:   19711354:
  37:      393..     398:   19711369..  19711374:      6:   19711365:
  38:      404..     409:   19711380..  19711385:      6:   19711375:
  39:      414..     419:   19711390..  19711395:      6:   19711386:
  40:      425..     430:   19711401..  19711406:      6:   19711396:
  41:      435..     440:   19711411..  19711416:      6:   19711407:
  42:      446..     451:   19711422..  19711427:      6:   19711417:
  43:      456..     461:   19711432..  19711437:      6:   19711428:
  44:      467..     472:   19711443..  19711448:      6:   19711438:
  45:      477..     482:   19711453..  19711458:      6:   19711449:
  46:      488..     493:   19711464..  19711469:      6:   19711459:
  47:      498..     503:   19711474..  19711479:      6:   19711470:
  48:      509..     514:   19711485..  19711490:      6:   19711480:
  49:      519..     524:   19711495..  19711500:      6:   19711491:
  50:      530..     535:   19711506..  19711511:      6:   19711501:
  51:      540..     545:   19711516..  19711521:      6:   19711512:
  52:      551..     556:   19711527..  19711532:      6:   19711522:
  53:      561..     566:   19711537..  19711542:      6:   19711533:
  54:      572..     577:   19711548..  19711553:      6:   19711543:
  55:      582..     587:   19711558..  19711563:      6:   19711554:
  56:      593..     598:   19711569..  19711574:      6:   19711564:
  57:      603..     608:   19711579..  19711584:      6:   19711575:
  58:      614..     619:   19711590..  19711595:      6:   19711585:
  59:      624..     629:   19711600..  19711605:      6:   19711596:
  60:      635..     640:   19711611..  19711616:      6:   19711606:
  61:      645..     650:   19711621..  19711626:      6:   19711617:
  62:      656..     661:   19711632..  19711637:      6:   19711627:
  63:      666..     671:   19711642..  19711647:      6:   19711638:
  64:      677..     682:   19711653..  19711658:      6:   19711648:
  65:      687..     692:   19711663..  19711668:      6:   19711659:
  66:      698..     703:   19711674..  19711679:      6:   19711669:
  67:      708..     713:   19711684..  19711689:      6:   19711680:
  68:      719..     724:   19711695..  19711700:      6:   19711690:
  69:      729..     734:   19711705..  19711710:      6:   19711701:
  70:      740..     745:   19711716..  19711721:      6:   19711711:
  71:      750..     755:   19711726..  19711731:      6:   19711722:
  72:      761..     766:   19711737..  19711742:      6:   19711732:
  73:      771..     776:   19711747..  19711752:      6:   19711743:
  74:      782..     787:   19711758..  19711763:      6:   19711753:
  75:      792..     797:   19711768..  19711773:      6:   19711764:
  76:      803..     808:   19711779..  19711784:      6:   19711774:
  77:      813..     818:   19711789..  19711794:      6:   19711785:
  78:      824..     829:   19711800..  19711805:      6:   19711795:
  79:      834..     839:   19711810..  19711815:      6:   19711806:
  80:      845..     850:   19711821..  19711826:      6:   19711816:
  81:      855..     860:   19711831..  19711836:      6:   19711827:
  82:      866..     871:   19711842..  19711847:      6:   19711837:
  83:      876..     881:   19711852..  19711857:      6:   19711848:
  84:      887..     892:   19711863..  19711868:      6:   19711858:
  85:      897..     902:   19711873..  19711878:      6:   19711869:
  86:      908..     913:   19711884..  19711889:      6:   19711879:
  87:      918..     923:   19711894..  19711899:      6:   19711890:
  88:      929..     934:   19711905..  19711910:      6:   19711900:
  89:      939..     944:   19711915..  19711920:      6:   19711911:
  90:      950..     955:   19711926..  19711931:      6:   19711921:
  91:      960..     965:   19711936..  19711941:      6:   19711932:
  92:      971..     976:   19711947..  19711952:      6:   19711942:
  93:      981..     986:   19711957..  19711962:      6:   19711953:
  94:      992..     997:   19711968..  19711973:      6:   19711963:
  95:     1002..    1007:   19711978..  19711983:      6:   19711974:

==> ff2 <==
Filesystem type is: ef53
File size of j2 is 4300800 (1050 blocks of 4096 bytes)
 ext:     logical_offset:        physical_offset: length:   expected: flags:
   0:        5..      10:   19713029..  19713034:      6:            
   1:       15..      20:   19713039..  19713044:      6:   19713035:
   2:       26..      31:   19713050..  19713055:      6:   19713045:
   3:       36..      41:   19713060..  19713065:      6:   19713056:
   4:       47..      52:   19713071..  19713076:      6:   19713066:
   5:       57..      62:   19713081..  19713086:      6:   19713077:
   6:       68..      73:   19713092..  19713097:      6:   19713087:
   7:       78..      83:   19713102..  19713107:      6:   19713098:
   8:       89..      94:   19713113..  19713118:      6:   19713108:
   9:       99..     104:   19713123..  19713128:      6:   19713119:
  10:      110..     115:   19713134..  19713139:      6:   19713129:
  11:      120..     125:   19713144..  19713149:      6:   19713140:
  12:      131..     136:   19713155..  19713160:      6:   19713150:
  13:      141..     146:   19713165..  19713170:      6:   19713161:
  14:      152..     157:   19713176..  19713181:      6:   19713171:
  15:      162..     167:   19713186..  19713191:      6:   19713182:
  16:      173..     178:   19713197..  19713202:      6:   19713192:
  17:      183..     188:   19713207..  19713212:      6:   19713203:
  18:      194..     199:   19713218..  19713223:      6:   19713213:
  19:      204..     209:   19713228..  19713233:      6:   19713224:
  20:      215..     220:   19713239..  19713244:      6:   19713234:
  21:      225..     230:   19713249..  19713254:      6:   19713245:
  22:      236..     241:   19713260..  19713265:      6:   19713255:
  23:      246..     251:   19713270..  19713275:      6:   19713266:
  24:      257..     262:   19713281..  19713286:      6:   19713276:
  25:      267..     272:   19713291..  19713296:      6:   19713287:
  26:      278..     283:   19713302..  19713307:      6:   19713297:
  27:      288..     293:   19713312..  19713317:      6:   19713308:
  28:      299..     304:   19713323..  19713328:      6:   19713318:
  29:      309..     314:   19713333..  19713338:      6:   19713329:
  30:      320..     325:   19713344..  19713349:      6:   19713339:
  31:      330..     335:   19713354..  19713359:      6:   19713350:
  32:      341..     346:   19713365..  19713370:      6:   19713360:
  33:      351..     356:   19713375..  19713380:      6:   19713371:
  34:      362..     367:   19713386..  19713391:      6:   19713381:
  35:      372..     377:   19713396..  19713401:      6:   19713392:
  36:      383..     388:   19713407..  19713412:      6:   19713402:
  37:      393..     398:   19713417..  19713422:      6:   19713413:
  38:      404..     409:   19713428..  19713433:      6:   19713423:
  39:      414..     419:   19713438..  19713443:      6:   19713434:
  40:      425..     430:   19713449..  19713454:      6:   19713444:
  41:      435..     440:   19713459..  19713464:      6:   19713455:
  42:      446..     451:   19713470..  19713475:      6:   19713465:
  43:      456..     461:   19713480..  19713485:      6:   19713476:
  44:      467..     472:   19713491..  19713496:      6:   19713486:
  45:      477..     482:   19713501..  19713506:      6:   19713497:
  46:      488..     493:   19713512..  19713517:      6:   19713507:
  47:      498..     503:   19713522..  19713527:      6:   19713518:
  48:      509..     514:   19713533..  19713538:      6:   19713528:
  49:      519..     524:   19713543..  19713548:      6:   19713539:
  50:      530..     535:   19713554..  19713559:      6:   19713549:
  51:      540..     545:   19713564..  19713569:      6:   19713560:
  52:      551..     556:   19713575..  19713580:      6:   19713570:
  53:      561..     566:   19713585..  19713590:      6:   19713581:
  54:      572..     577:   19713596..  19713601:      6:   19713591:
  55:      582..     587:   19713606..  19713611:      6:   19713602:
  56:      593..     598:   19713617..  19713622:      6:   19713612:
  57:      603..     608:   19713627..  19713632:      6:   19713623:
  58:      614..     619:   19713638..  19713643:      6:   19713633:
  59:      624..     629:   19713648..  19713653:      6:   19713644:
  60:      635..     640:   19713659..  19713664:      6:   19713654:
  61:      645..     650:   19713669..  19713674:      6:   19713665:
  62:      656..     661:   19713680..  19713685:      6:   19713675:
  63:      666..     671:   19713690..  19713695:      6:   19713686:
  64:      677..     682:   19713701..  19713706:      6:   19713696:
  65:      687..     692:   19713711..  19713716:      6:   19713707:
  66:      698..     703:   19713722..  19713727:      6:   19713717:
  67:      708..     713:   19713732..  19713737:      6:   19713728:
  68:      719..     724:   19713743..  19713748:      6:   19713738:
  69:      729..     734:   19713753..  19713758:      6:   19713749:
  70:      740..     745:   19713764..  19713769:      6:   19713759:
  71:      750..     755:   19713774..  19713779:      6:   19713770:
  72:      761..     766:   19713785..  19713790:      6:   19713780:
  73:      771..     776:   19713795..  19713800:      6:   19713791:
  74:      782..     787:   19713806..  19713811:      6:   19713801:
  75:      792..     797:   19713816..  19713821:      6:   19713812:
  76:      803..     808:   19713827..  19713832:      6:   19713822:
  77:      813..     818:   19713837..  19713842:      6:   19713833:
  78:      824..     829:   19713848..  19713853:      6:   19713843:
  79:      834..     839:   19713858..  19713863:      6:   19713854:
  80:      845..     850:   19713869..  19713874:      6:   19713864:
  81:      855..     860:   19713879..  19713884:      6:   19713875:
  82:      866..     871:   19713890..  19713895:      6:   19713885:
  83:      876..     881:   19713900..  19713905:      6:   19713896:
  84:      887..     892:   19713911..  19713916:      6:   19713906:
  85:      897..     902:   19713921..  19713926:      6:   19713917:
  86:      908..     913:   19713932..  19713937:      6:   19713927:
  87:      918..     923:   19713942..  19713947:      6:   19713938:
  88:      929..     934:   19713953..  19713958:      6:   19713948:
  89:      939..     944:   19713963..  19713968:      6:   19713959:
  90:      950..     955:   19713974..  19713979:      6:   19713969:
  91:      960..     965:   19713984..  19713989:      6:   19713980:
  92:      971..     976:   19713995..  19714000:      6:   19713990:
  93:      981..     986:   19714005..  19714010:      6:   19714001:
  94:      992..     997:   19714016..  19714021:      6:   19714011:
  95:     1002..    1007:   19714026..  19714031:      6:   19714022:
+ test 0 = 1
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+ chmod -R u+rwx '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
+ rm -rf '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-sparse-fiemap.sh.rtpe'
+ exit 0
