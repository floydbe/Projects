++ initial_cwd_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
++ fail=0
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23' gt-zero.sh.XXXX
+++ case $# in
+++ destdir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+++ template_=gt-zero.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ case $template_ in
++++ unset TMPDIR
+++ d='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
+++ case $d in
+++ test -d '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
++++ ls -dgo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
++++ tr S -
+++ perms='drwx------ 2 4096 Mar  6 11:59 /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
+++ case $perms in
+++ test 0 = 0
+++ echo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
+++ return
++ test_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
++ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $abs_path_dir_ in
+ PATH='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src:/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/src:/home/jfloyd/.opam/system/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games'
+ create_exe_shims_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ test yes = yes
+ local i
+ for i in '$*'
+ env id --version
id (GNU coreutils) 8.23
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
++ id -nu
+ u=jfloyd
+ id
uid=1000(jfloyd) gid=1000(jfloyd) groups=1000(jfloyd),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)
+ id jfloyd
uid=1000(jfloyd) gid=1000(jfloyd) groups=1000(jfloyd),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)
+ echo 'id: option --zero not permitted in default format'
+ id --zero
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ compare err-exp err
+ compare_dev_null_ err-exp err
+ test 2 = 2
+ test xerr-exp = x/dev/null
+ test xerr = x/dev/null
+ return 2
+ case $? in
+ compare_ err-exp err
+ diff -u err-exp err
+ users=jfloyd
+ for u in root man postfix sshd nobody
+ id root
+ users='jfloyd root'
+ for u in root man postfix sshd nobody
+ id man
+ users='jfloyd root man'
+ for u in root man postfix sshd nobody
+ id postfix
+ for u in root man postfix sshd nobody
+ id sshd
+ for u in root man postfix sshd nobody
+ id nobody
+ users='jfloyd root man nobody'
+ printf '%s\n' jfloyd root man nobody ''
+ printf '\n'
+ read u
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -g[z] jfloyd'
+ printf '\n%s: ' 'id -g[z] jfloyd'
+ id -g jfloyd
+ id -gz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gn[z] jfloyd'
+ printf '\n%s: ' 'id -gn[z] jfloyd'
+ id -gn jfloyd
+ id -gnz jfloyd
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gr[z] jfloyd'
+ printf '\n%s: ' 'id -gr[z] jfloyd'
+ id -gr jfloyd
+ id -grz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -grn[z] jfloyd'
+ printf '\n%s: ' 'id -grn[z] jfloyd'
+ id -grn jfloyd
+ id -grnz jfloyd
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -G[z] jfloyd'
+ printf '\n%s: ' 'id -G[z] jfloyd'
+ id -G jfloyd
+ id -Gz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gn[z] jfloyd'
+ printf '\n%s: ' 'id -Gn[z] jfloyd'
+ id -Gn jfloyd
+ id -Gnz jfloyd
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gr[z] jfloyd'
+ printf '\n%s: ' 'id -Gr[z] jfloyd'
+ id -Gr jfloyd
+ id -Grz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Grn[z] jfloyd'
+ printf '\n%s: ' 'id -Grn[z] jfloyd'
+ id -Grn jfloyd
+ id -Grnz jfloyd
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -u[z] jfloyd'
+ printf '\n%s: ' 'id -u[z] jfloyd'
+ id -u jfloyd
+ id -uz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -un[z] jfloyd'
+ printf '\n%s: ' 'id -un[z] jfloyd'
+ id -un jfloyd
+ id -unz jfloyd
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -ur[z] jfloyd'
+ printf '\n%s: ' 'id -ur[z] jfloyd'
+ id -ur jfloyd
+ id -urz jfloyd
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -urn[z] jfloyd'
+ printf '\n%s: ' 'id -urn[z] jfloyd'
+ id -urn jfloyd
+ id -urnz jfloyd
+ head -c-1
+ read u
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -g[z] root'
+ printf '\n%s: ' 'id -g[z] root'
+ id -g root
+ id -gz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gn[z] root'
+ printf '\n%s: ' 'id -gn[z] root'
+ id -gn root
+ id -gnz root
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gr[z] root'
+ printf '\n%s: ' 'id -gr[z] root'
+ id -gr root
+ id -grz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -grn[z] root'
+ printf '\n%s: ' 'id -grn[z] root'
+ id -grn root
+ id -grnz root
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -G[z] root'
+ printf '\n%s: ' 'id -G[z] root'
+ id -G root
+ id -Gz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gn[z] root'
+ printf '\n%s: ' 'id -Gn[z] root'
+ id -Gn root
+ id -Gnz root
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gr[z] root'
+ printf '\n%s: ' 'id -Gr[z] root'
+ id -Gr root
+ id -Grz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Grn[z] root'
+ printf '\n%s: ' 'id -Grn[z] root'
+ id -Grn root
+ id -Grnz root
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -u[z] root'
+ printf '\n%s: ' 'id -u[z] root'
+ id -u root
+ id -uz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -un[z] root'
+ printf '\n%s: ' 'id -un[z] root'
+ id -un root
+ id -unz root
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -ur[z] root'
+ printf '\n%s: ' 'id -ur[z] root'
+ id -ur root
+ id -urz root
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -urn[z] root'
+ printf '\n%s: ' 'id -urn[z] root'
+ id -urn root
+ id -urnz root
+ head -c-1
+ read u
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -g[z] man'
+ printf '\n%s: ' 'id -g[z] man'
+ id -g man
+ id -gz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gn[z] man'
+ printf '\n%s: ' 'id -gn[z] man'
+ id -gn man
+ id -gnz man
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gr[z] man'
+ printf '\n%s: ' 'id -gr[z] man'
+ id -gr man
+ id -grz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -grn[z] man'
+ printf '\n%s: ' 'id -grn[z] man'
+ id -grn man
+ id -grnz man
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -G[z] man'
+ printf '\n%s: ' 'id -G[z] man'
+ id -G man
+ id -Gz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gn[z] man'
+ printf '\n%s: ' 'id -Gn[z] man'
+ id -Gn man
+ id -Gnz man
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gr[z] man'
+ printf '\n%s: ' 'id -Gr[z] man'
+ id -Gr man
+ id -Grz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Grn[z] man'
+ printf '\n%s: ' 'id -Grn[z] man'
+ id -Grn man
+ id -Grnz man
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -u[z] man'
+ printf '\n%s: ' 'id -u[z] man'
+ id -u man
+ id -uz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -un[z] man'
+ printf '\n%s: ' 'id -un[z] man'
+ id -un man
+ id -unz man
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -ur[z] man'
+ printf '\n%s: ' 'id -ur[z] man'
+ id -ur man
+ id -urz man
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -urn[z] man'
+ printf '\n%s: ' 'id -urn[z] man'
+ id -urn man
+ id -urnz man
+ head -c-1
+ read u
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -g[z] nobody'
+ printf '\n%s: ' 'id -g[z] nobody'
+ id -g nobody
+ id -gz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gn[z] nobody'
+ printf '\n%s: ' 'id -gn[z] nobody'
+ id -gn nobody
+ id -gnz nobody
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gr[z] nobody'
+ printf '\n%s: ' 'id -gr[z] nobody'
+ id -gr nobody
+ id -grz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -grn[z] nobody'
+ printf '\n%s: ' 'id -grn[z] nobody'
+ id -grn nobody
+ id -grnz nobody
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -G[z] nobody'
+ printf '\n%s: ' 'id -G[z] nobody'
+ id -G nobody
+ id -Gz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gn[z] nobody'
+ printf '\n%s: ' 'id -Gn[z] nobody'
+ id -Gn nobody
+ id -Gnz nobody
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gr[z] nobody'
+ printf '\n%s: ' 'id -Gr[z] nobody'
+ id -Gr nobody
+ id -Grz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Grn[z] nobody'
+ printf '\n%s: ' 'id -Grn[z] nobody'
+ id -Grn nobody
+ id -Grnz nobody
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -u[z] nobody'
+ printf '\n%s: ' 'id -u[z] nobody'
+ id -u nobody
+ id -uz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -un[z] nobody'
+ printf '\n%s: ' 'id -un[z] nobody'
+ id -un nobody
+ id -unz nobody
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -ur[z] nobody'
+ printf '\n%s: ' 'id -ur[z] nobody'
+ id -ur nobody
+ id -urz nobody
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -urn[z] nobody'
+ printf '\n%s: ' 'id -urn[z] nobody'
+ id -urn nobody
+ id -urnz nobody
+ head -c-1
+ read u
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -g[z] '
+ printf '\n%s: ' 'id -g[z] '
+ id -g
+ id -gz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gn[z] '
+ printf '\n%s: ' 'id -gn[z] '
+ id -gn
+ id -gnz
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -gr[z] '
+ printf '\n%s: ' 'id -gr[z] '
+ id -gr
+ id -grz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -grn[z] '
+ printf '\n%s: ' 'id -grn[z] '
+ id -grn
+ id -grnz
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -G[z] '
+ printf '\n%s: ' 'id -G[z] '
+ id -G
+ id -Gz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gn[z] '
+ printf '\n%s: ' 'id -Gn[z] '
+ id -Gn
+ id -Gnz
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Gr[z] '
+ printf '\n%s: ' 'id -Gr[z] '
+ id -Gr
+ id -Grz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -Grn[z] '
+ printf '\n%s: ' 'id -Grn[z] '
+ id -Grn
+ id -Grnz
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -u[z] '
+ printf '\n%s: ' 'id -u[z] '
+ id -u
+ id -uz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -un[z] '
+ printf '\n%s: ' 'id -un[z] '
+ id -un
+ id -unz
+ head -c-1
+ for o in g gr G Gr u ur
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -ur[z] '
+ printf '\n%s: ' 'id -ur[z] '
+ id -ur
+ id -urz
+ head -c-1
+ for n in ''\'''\''' n
+ printf '%s: ' 'id -urn[z] '
+ printf '\n%s: ' 'id -urn[z] '
+ id -urn
+ id -urnz
+ head -c-1
+ read u
+ printf '\n'
+ tr '\0' ' '
+ compare exp out2
+ compare_dev_null_ exp out2
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout2 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out2
+ diff -u exp out2
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+ chmod -R u+rwx '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
+ rm -rf '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-zero.sh.Mm2o'
+ exit 0
