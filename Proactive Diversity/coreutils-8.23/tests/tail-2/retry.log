++ initial_cwd_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
++ fail=0
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23' gt-retry.sh.XXXX
+++ case $# in
+++ destdir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+++ template_=gt-retry.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ case $template_ in
++++ unset TMPDIR
+++ d='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
+++ case $d in
+++ test -d '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
++++ ls -dgo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
++++ tr S -
+++ perms='drwx------ 2 4096 Mar  6 11:58 /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
+++ case $perms in
+++ test 0 = 0
+++ echo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
+++ return
++ test_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
++ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $abs_path_dir_ in
+ PATH='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src:/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/src:/home/jfloyd/.opam/system/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games'
+ create_exe_shims_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ test yes = yes
+ local i
+ for i in '$*'
+ env tail --version
tail (GNU coreutils) 8.23
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ touch file
+ tail --retry file
++ wc -l
+ '[' 1 = 1 ']'
+ grep -F 'tail: warning: --retry ignored' out
tail: warning: --retry ignored; --retry is useful only when following
+ tail --retry missing
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'tail: warning: --retry ignored' out
tail: warning: --retry ignored; --retry is useful only when following
+ pid=6205
+ retry_delay_ wait4lines_ .1 6 1
+ timeout 10 tail -s.1 --follow=name --retry missing
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 1
+ local delay=0.1
+ local elc=1
++ wc -l
+ '[' 1 -ge 1 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 3
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 3
+ local delay=0.1
+ local elc=3
++ wc -l
+ '[' 3 -ge 3 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ kill 6205
+ wait 6205
++ wc -l
+ '[' 3 = 3 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following end of new file
+ grep '^X$' out
X
+ rm -f missing out
+ pid=6219
+ retry_delay_ wait4lines_ .1 6 2
+ timeout 10 tail -s.1 --follow=descriptor --retry missing
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ mawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ wc -l
+ '[' 3 -ge 4 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ mawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 4
+ local delay=0.4
+ local elc=4
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ kill 6219
+ wait 6219
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following end of new file
+ grep '^X$' out
X
+ rm -f missing out
+ pid=6246
+ retry_delay_ wait4lines_ .1 6 2
+ timeout 10 tail -s.1 --follow=descriptor --retry missing
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ mkdir missing
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ mawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ mawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ wait 6246
+ rc=1
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'replaced with an untailable file' out
tail: 'missing' has been replaced with an untailable file; giving up on this name
+ grep -F 'no files remaining' out
tail: no files remaining
+ '[' 1 = 1 ']'
+ rm -fd missing out
+ tail --follow=descriptor missing
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ tail --follow=name missing
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+ chmod -R u+rwx '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
+ rm -rf '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-retry.sh.XFdM'
+ exit 0
