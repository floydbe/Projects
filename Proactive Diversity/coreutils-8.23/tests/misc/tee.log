++ initial_cwd_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
++ fail=0
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23' gt-tee.sh.XXXX
+++ case $# in
+++ destdir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+++ template_=gt-tee.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ case $template_ in
++++ unset TMPDIR
+++ d='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
+++ case $d in
+++ test -d '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
++++ ls -dgo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
++++ tr S -
+++ perms='drwx------ 2 4096 Mar  6 11:58 /home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
+++ case $perms in
+++ test 0 = 0
+++ echo '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
+++ return
++ test_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
++ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $abs_path_dir_ in
+ PATH='/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src:/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/src:/home/jfloyd/.opam/system/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games'
+ create_exe_shims_ '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/./src'
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tee
+ test yes = yes
+ local i
+ for i in '$*'
+ env tee --version
tee (GNU coreutils) 8.23
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, Richard M. Stallman, and David MacKenzie.
+ echo line
++ seq 9
+ nums='1
2
3
4
5
6
7
8
9'
+ for n in 0 '$nums'
++ seq 0
+ files=
+ rm -f
+ tee
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for n in 0 '$nums'
++ seq 1
+ files=1
+ rm -f 1
+ tee 1
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for n in 0 '$nums'
++ seq 2
+ files='1
2'
+ rm -f 1 2
+ tee 1 2
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for n in 0 '$nums'
++ seq 3
+ files='1
2
3'
+ rm -f 1 2 3
+ tee 1 2 3
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for n in 0 '$nums'
++ seq 4
+ files='1
2
3
4'
+ rm -f 1 2 3 4
+ tee 1 2 3 4
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for n in 0 '$nums'
++ seq 5
+ files='1
2
3
4
5'
+ rm -f 1 2 3 4 5
+ tee 1 2 3 4 5
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for f in out '$files'
+ compare sample 5
+ compare_dev_null_ sample 5
+ test 2 = 2
+ test xsample = x/dev/null
+ test x5 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 5
+ diff -u sample 5
+ for n in 0 '$nums'
++ seq 6
+ files='1
2
3
4
5
6'
+ rm -f 1 2 3 4 5 6
+ tee 1 2 3 4 5 6
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for f in out '$files'
+ compare sample 5
+ compare_dev_null_ sample 5
+ test 2 = 2
+ test xsample = x/dev/null
+ test x5 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 5
+ diff -u sample 5
+ for f in out '$files'
+ compare sample 6
+ compare_dev_null_ sample 6
+ test 2 = 2
+ test xsample = x/dev/null
+ test x6 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 6
+ diff -u sample 6
+ for n in 0 '$nums'
++ seq 7
+ files='1
2
3
4
5
6
7'
+ rm -f 1 2 3 4 5 6 7
+ tee 1 2 3 4 5 6 7
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for f in out '$files'
+ compare sample 5
+ compare_dev_null_ sample 5
+ test 2 = 2
+ test xsample = x/dev/null
+ test x5 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 5
+ diff -u sample 5
+ for f in out '$files'
+ compare sample 6
+ compare_dev_null_ sample 6
+ test 2 = 2
+ test xsample = x/dev/null
+ test x6 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 6
+ diff -u sample 6
+ for f in out '$files'
+ compare sample 7
+ compare_dev_null_ sample 7
+ test 2 = 2
+ test xsample = x/dev/null
+ test x7 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 7
+ diff -u sample 7
+ for n in 0 '$nums'
++ seq 8
+ files='1
2
3
4
5
6
7
8'
+ rm -f 1 2 3 4 5 6 7 8
+ tee 1 2 3 4 5 6 7 8
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for f in out '$files'
+ compare sample 5
+ compare_dev_null_ sample 5
+ test 2 = 2
+ test xsample = x/dev/null
+ test x5 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 5
+ diff -u sample 5
+ for f in out '$files'
+ compare sample 6
+ compare_dev_null_ sample 6
+ test 2 = 2
+ test xsample = x/dev/null
+ test x6 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 6
+ diff -u sample 6
+ for f in out '$files'
+ compare sample 7
+ compare_dev_null_ sample 7
+ test 2 = 2
+ test xsample = x/dev/null
+ test x7 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 7
+ diff -u sample 7
+ for f in out '$files'
+ compare sample 8
+ compare_dev_null_ sample 8
+ test 2 = 2
+ test xsample = x/dev/null
+ test x8 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 8
+ diff -u sample 8
+ for n in 0 '$nums'
++ seq 9
+ files='1
2
3
4
5
6
7
8
9'
+ rm -f 1 2 3 4 5 6 7 8 9
+ tee 1 2 3 4 5 6 7 8 9
+ for f in out '$files'
+ compare sample out
+ compare_dev_null_ sample out
+ test 2 = 2
+ test xsample = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ sample out
+ diff -u sample out
+ for f in out '$files'
+ compare sample 1
+ compare_dev_null_ sample 1
+ test 2 = 2
+ test xsample = x/dev/null
+ test x1 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 1
+ diff -u sample 1
+ for f in out '$files'
+ compare sample 2
+ compare_dev_null_ sample 2
+ test 2 = 2
+ test xsample = x/dev/null
+ test x2 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 2
+ diff -u sample 2
+ for f in out '$files'
+ compare sample 3
+ compare_dev_null_ sample 3
+ test 2 = 2
+ test xsample = x/dev/null
+ test x3 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 3
+ diff -u sample 3
+ for f in out '$files'
+ compare sample 4
+ compare_dev_null_ sample 4
+ test 2 = 2
+ test xsample = x/dev/null
+ test x4 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 4
+ diff -u sample 4
+ for f in out '$files'
+ compare sample 5
+ compare_dev_null_ sample 5
+ test 2 = 2
+ test xsample = x/dev/null
+ test x5 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 5
+ diff -u sample 5
+ for f in out '$files'
+ compare sample 6
+ compare_dev_null_ sample 6
+ test 2 = 2
+ test xsample = x/dev/null
+ test x6 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 6
+ diff -u sample 6
+ for f in out '$files'
+ compare sample 7
+ compare_dev_null_ sample 7
+ test 2 = 2
+ test xsample = x/dev/null
+ test x7 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 7
+ diff -u sample 7
+ for f in out '$files'
+ compare sample 8
+ compare_dev_null_ sample 8
+ test 2 = 2
+ test xsample = x/dev/null
+ test x8 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 8
+ diff -u sample 8
+ for f in out '$files'
+ compare sample 9
+ compare_dev_null_ sample 9
+ test 2 = 2
+ test xsample = x/dev/null
+ test x9 = x/dev/null
+ return 2
+ case $? in
+ compare_ sample 9
+ diff -u sample 9
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ cd '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23'
+ chmod -R u+rwx '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
+ rm -rf '/home/jfloyd/Documents/Projects/Proactive Diversity/coreutils-8.23/gt-tee.sh.pE4C'
+ exit 0
